openapi: 3.0.0
info:
  title: UsagiBooru Catalog API
  version: '2.0'
  contact:
    name: Omado
    url: 'https://twitter.com/shallow_omado'
    email: dsgamer777@gmail.com
  description: データ一覧表示関連API
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.ja.html'
servers:
  - url: 'https://api.gochiusa.team'
    description: Prod
  - url: 'https://api-next.gochiusa.team'
    description: Staging
  - url: 'http://127.0.0.1:8080'
    description: Dev
paths:
  /catalog/artists:
    get:
      summary: Get artist list
      tags:
        - catalog
      responses:
        '200':
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogArtistResponse'
              examples: {}
      operationId: getArtistList
      description: 絵師一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
    parameters: []
  /catalog/tags:
    get:
      summary: Get tag list
      tags:
        - catalog
      responses:
        '200':
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogTagResponse'
              examples: {}
      operationId: getTagList
      description: タグ一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
    parameters: []
  /catalog/characters:
    get:
      summary: Get character list
      tags:
        - catalog
      responses:
        '200':
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogTagResponse'
              examples: {}
      operationId: getCharacterList
      description: キャラクター一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /catalog/uploaders:
    get:
      summary: Get uploader list
      tags:
        - catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogUploaderResponse'
      operationId: getUploaderList
      description: 投稿者一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
components:
  schemas:
    GetCatalogArtistResponse:
      description: ''
      type: object
      x-examples:
        example:
          pagination:
            title: 絵師一覧
            type: artist
            count: 1
            current: 1
            pages: 1
            perPage: 20
          contents:
            - artistID: 1
              contributors:
                - accountID: 1
                  name: お窓
              name:
                - 彩電
              description: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
              group:
                - こねこぼたん
              pixivID:
                - 40436
              twitterID:
                - harufcs
              mastodon:
                - 'https://pawoo.net/@saiden'
              homepage:
                - 'http://konebota.x0.com/PAGE/'
              count: 1
              lcount: 1204
      title: GetCatalogArtistResponse
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ArtistStruct'
      required:
        - pagination
        - contents
    GetCatalogTagResponse:
      description: ''
      type: object
      x-examples:
        example:
          pagination:
            title: タグ一覧
            type: tag
            count: 4
            current: 1
            pages: 1
            perPage: 20
          contents:
            - tagID: 1
              type: copyright
              name: ご注文はうさぎですか?
              description: こころぴょんぴょんする漫画 from 芳文社
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
            - tagID: 2
              type: character
              name: 香風智乃
              description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
            - tagID: 3
              type: general
              name: ロリ
              description: 小さな女の子
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
            - tagID: 4
              type: meta
              name: FHD
              description: フルHD並の解像度がある画像
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
      title: GetCatalogTagResponse
      required:
        - pagination
        - contents
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/TagStruct'
    GetCatalogUploaderResponse:
      description: ''
      type: object
      x-examples:
        example:
          pagination:
            title: 投稿者一覧
            type: uploader
            count: 2
            current: 1
            pages: 1
            perPage: 20
          contents:
            - accountID: 1
              name: お窓
              count: 0
              lcount: 0
            - accountID: 2
              name: 香風智乃
              count: 0
              lcount: 0
      title: GetCatalogUploaderResponse
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/UploaderStruct'
      required:
        - pagination
        - contents
    PaginationStruct:
      title: PaginationStruct
      type: object
      x-examples:
        example:
          title: 香風智乃
          type: tag
          count: 1
          current: 1
          pages: 1
          perPage: 20
      properties:
        title:
          type: string
          minLength: 1
          description: ページネーションタイトル(表示用)
          example: 香風智乃
        type:
          type: string
          description: ページネーション種別(表示用)
          example: tag
          enum:
            - artist
            - tag
            - uploader
            - notify-client
            - notify-condition
            - mute
            - follow
            - article
            - mylist-list
            - art
            - upload-history
          default: tag
        count:
          type: integer
          example: 1
          description: ヒット総数
          minimum: 0
          default: 0
        current:
          type: integer
          description: 現在のページ
          minimum: 1
          example: 1
          default: 1
        pages:
          type: integer
          description: ページ数
          minimum: 1
          example: 1
          default: 1
        perPage:
          type: integer
          description: ページ毎の取得数
          default: 20
          example: 20
          minimum: 20
          enum:
            - 20
            - 40
            - 60
            - 80
            - 100
          maximum: 100
          format: int32
      required:
        - title
        - type
        - count
        - current
        - pages
        - perPage
    ArtistStruct:
      title: ArtistStruct
      type: object
      x-examples:
        example:
          artistID: 1
          contributors:
            - accountID: 1
              name: お窓
          name:
            - 彩電
          description: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
          group:
            - こねこぼたん
          pixivID:
            - 40436
          twitterID:
            - harufcs
          mastodon:
            - 'https://pawoo.net/@saiden'
          homepage:
            - 'http://konebota.x0.com/PAGE/'
          count: 1
          lcount: 1204
      description: ''
      properties:
        artistID:
          type: integer
          description: 絵師のID
          example: 1
        contributors:
          description: 絵師情報を登録したユーザーのID
          type: array
          items:
            $ref: '#/components/schemas/LightAccountStruct'
        name:
          type: array
          description: 絵師の名前(ペンネーム正式名)
          example:
            - 彩電
          items:
            type: string
            example: 彩電
        description:
          type: string
          example: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
          description: 絵師を説明する文章(1行分)
        group:
          example:
            - こねこぼたん
          description: サークル名
          type: array
          items:
            type: string
            example: こねこぼたん
        pixivID:
          type: array
          description: PixivのユーザーID(数字)
          items:
            type: integer
            example: 40436
        twitterID:
          type: array
          description: Twitterの表示ID(英数字+)
          items:
            type: string
            example: harufcs
        mastodon:
          type: array
          description: マストドンアカウントのURL
          items:
            type: string
            example: 'https://pawoo.net/@saiden'
            format: uri-reference
        homepage:
          description: HPのURL
          type: array
          items:
            type: string
            example: 'http://konebota.x0.com/PAGE/'
            format: uri-reference
        count:
          type: integer
          description: 絵師に属する作品数
          minimum: 0
          example: 1
          default: 0
        lcount:
          type: integer
          description: 絵師に属するいいね数
          example: 1204
          default: 0
          minimum: 0
    LightAccountStruct:
      title: LightAccountStruct
      type: object
      x-examples:
        example:
          accountID: 1
          name: お窓
      properties:
        accountID:
          type: integer
          description: アカウントID
          example: 1
          minimum: 1
        name:
          type: string
          description: アカウント名
          example: お窓
    LightTagStruct:
      title: LightTagStruct
      type: object
      x-examples:
        example-copyright:
          tagID: 1
          type: copyright
          name: ご注文はうさぎですか?
        example-character:
          tagID: 2
          type: character
          name: 香風智乃
        example-general:
          tagID: 3
          type: general
          name: ロリ
        example-meta:
          tagID: 4
          type: meta
          name: FHD
      description: タグデータ簡易モデル
      properties:
        tagID:
          type: integer
          minimum: 1
          description: サイト内通しタグ番号
          example: 2
        name:
          type: string
          minLength: 1
          maxLength: 20
          description: タグの名称
          example: 香風智乃
    TagStruct:
      title: TagStruct
      type: object
      x-examples:
        example-copyright:
          tagID: 1
          type: copyright
          name: ご注文はうさぎですか?
          description: こころぴょんぴょんする漫画 from 芳文社
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
        example-character:
          tagID: 2
          type: character
          name: 香風智乃
          description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
        example-general:
          tagID: 3
          type: general
          name: ロリ
          description: 小さな女の子
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
        example-meta:
          tagID: 4
          type: meta
          name: FHD
          description: フルHD並の解像度がある画像
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
      description: タグデータモデル
      properties:
        tagID:
          type: integer
          minimum: 1
          description: サイト内通しタグ番号
        type:
          type: string
          description: タグ種別
          enum:
            - copyright
            - character
            - general
            - meta
          default: general
          example: general
        name:
          type: string
          minLength: 1
          maxLength: 20
          description: タグの名称
        description:
          type: string
          description: タグの説明文
          maxLength: 280
          minLength: 0
        nsfw:
          type: boolean
          description: アダルトコンテンツが含まれるタグか
          default: false
        issuer:
          $ref: '#/components/schemas/LightAccountStruct'
        parent:
          type: array
          description: 親となるタグ
          minItems: 0
          items:
            $ref: '#/components/schemas/LightTagStruct'
        child:
          type: array
          description: 子となるタグ
          minItems: 0
          items:
            $ref: '#/components/schemas/LightTagStruct'
        count:
          type: integer
          description: タグに属する作品数
          example: 0
          minimum: 0
          default: 0
        lcount:
          type: integer
          description: タグに属するいいね数
          minimum: 0
          example: 0
          default: 0
    UploaderStruct:
      title: UploaderStruct
      type: object
      description: 投稿者ユーザー型
      x-examples:
        example:
          accountID: 1
          name: お窓
          count: 1
          lcount: 1
      properties:
        accountID:
          type: integer
          minimum: 1
          example: 1
          description: ユーザーID
        name:
          type: string
          example: お窓
          minLength: 1
          maxLength: 40
          description: ユーザー名
        count:
          type: integer
          minimum: 0
          example: 1
          description: 投稿数
        lcount:
          type: integer
          minimum: 0
          example: 1
          description: 得たいいね数
      required:
        - accountID
        - name
        - count
        - lcount
  parameters:
    SearchQuerySort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - l
          - d
        example: d
        default: d
      description: 'ソート方法 l:いいね数順 d:投稿日順'
    SearchQueryOrder:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - d
          - a
        default: d
        example: d
        minLength: 1
        maxLength: 1
      description: 'ソート方向 d:降順(大→小) a:昇順(小→大)'
    SearchQueryPage:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
    SearchQueryMylistAllow:
      name: with_mylisted
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        enum:
          - 1
          - 0
        example: 1
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
    SearchQueryMylistDeny:
      name: with_mylisted
      in: query
      schema:
        type: integer
        enum:
          - 0
          - 1
        example: 0
        default: 0
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
    SearchQueryPerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 20
        enum:
          - 20
          - 40
          - 60
          - 80
          - 100
        example: 20
        minimum: 20
        maximum: 100
      description: 1ページ辺りの要素数
    SearchQuerySortCatalog:
      in: query
      schema:
        type: string
        default: d
        enum:
          - c
          - d
          - l
          - 'n'
        example: d
      description: 'ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前'
      name: sort
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
tags:
  - name: catalog
security:
  - Authorization: []
