openapi: 3.0.0
info:
  title: UsagiBooru MachineLearning API
  version: '2.0'
  contact:
    name: Omado
    url: 'https://twitter.com/shallow_omado'
    email: dsgamer777@gmail.com
  description: |-
    機械学習を用いた推定関連API
    (Optional)
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.ja.html'
servers:
  - url: 'https://api.gochiusa.team'
    description: Prod
  - url: 'https://api-next.gochiusa.team'
    description: Staging
  - url: 'http://127.0.0.1:8080'
    description: Dev
paths:
  /ml/predict/nsfw:
    post:
      summary: Predict image nsfw
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: predictNsfw
      description: |-
        指定された画像がR18かNudeNet/TensorflowLiteを使い推測します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
    parameters: []
  /ml/predict/tags:
    post:
      summary: Predict image tags
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: predictTags
      description: |-
        指定された画像のタグをDeepDanbooruで推測します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
  /ml/transparent:
    post:
      summary: Transparent image
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: transparentImage
      description: |-
        指定された画像の背景をrembgまたはhttps://github.com/zymk9/Yet-Another-Anime-Segmenterを使い透過します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
  /ml/waifu2x:
    post:
      summary: Waifu2x image
      operationId: scaleWaifu2x
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - ml
      description: |-
        指定された画像をwaifu2x-converter-cpp等で拡大します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
      parameters:
        - schema:
            type: number
            default: 2
            maximum: 3
            minimum: 1
          in: query
          name: scale
          required: true
          description: 拡大レベル
        - schema:
            type: integer
            minimum: 0
            maximum: 3
            enum:
              - 0
              - 1
              - 2
              - 3
            example: 1
            default: 1
          in: query
          name: denoise
          required: true
          description: ノイズ除去レベル
  '/ml/polling/{pollingID}':
    parameters:
      - schema:
          type: integer
        name: pollingID
        in: path
        required: true
        description: 対象のポーリングID
    get:
      summary: Get ml polling
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPollingFinishResponse'
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getPolling
      description: |-
        処理結果が返ってくるまでここをPollingします
        1req/10s ぐらいのリクエストでお願いします
  '/ml/predict/nsfw/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get nsfw predict result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPredictNsfwResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getNsfwPredictResult
      description: |-
        NSFW推定の処理結果を返します
        結果データは1日で削除されます
  '/ml/predict/tags/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get tags predict result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPredictTagsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getTagPredictResult
      description: |-
        タグ推定の処理結果を返します
        結果データは1日で削除されます
  '/ml/transparent/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get transparent result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineLearningGeneralResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getTransparentImageResult
      description: |-
        透過の処理結果を返します
        結果画像は1日で削除されます
  '/ml/waifu2x/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get waifu2x result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineLearningGeneralResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getScaleWaifu2xResult
      description: |-
        Waifu2xの処理結果を返します
        結果画像は1日で削除されます
components:
  schemas:
    PostMachineLearningGeneralRequest:
      title: PostMachineLearningGeneralRequest
      type: object
      x-examples: {}
      properties:
        image:
          type: string
          format: binary
          description: Binary型の画像
      required:
        - image
    PostMachineLearningGeneralResponse:
      title: PostMachineLearningGeneralResponse
      type: object
      properties:
        url:
          type: string
          description: Polling用URLを返す(すぐに終わらん)
          format: iri-reference
      required:
        - url
      x-examples:
        example:
          url: 'https://api.example.com/ml/polling/1'
    GeneralMessageResponse:
      title: GeneralMessageResponse
      type: object
      properties:
        message:
          type: string
          description: 応答メッセージ(何が間違っているかの詳細)
          minLength: 1
      required:
        - message
      x-examples:
        not-found:
          message: Specified content was not found.
        no-permission:
          message: You don't have enough permission to do it.
        bad-request:
          message: Your request body is wrong.
        locked:
          message: Specified content is referenced from other content.
    GetPollingFinishResponse:
      title: GetPollingFinishResponse
      type: object
      properties:
        url:
          type: string
          format: uri-reference
          minLength: 1
          maxLength: 100
          example: 'https://api.example.com/ml/predict/tags/result/1'
        id:
          type: string
          minLength: 1
          maxLength: 100
          example: '1'
      required:
        - url
        - id
      x-examples:
        example:
          url: 'https://api.example.com/ml/predict/tags/result/1'
          id: '1'
    PostPredictNsfwResponse:
      title: PostPredictNsfwResponse
      type: object
      properties:
        nsfw:
          type: boolean
          default: false
        accuracy:
          type: number
          minimum: 0
          maximum: 1
          example: 0.8889
      required:
        - nsfw
        - accuracy
      x-examples:
        example:
          nsfw: false
          accuracy: 0.8889
    PostPredictTagsResponse:
      title: PostPredictTagsResponse
      type: object
      properties:
        tags:
          type: array
          minItems: 0
          maxItems: 100
          items:
            type: object
            properties:
              name:
                type: string
                description: タグ名
                minLength: 1
                maxLength: 100
                example: kafuu_chino
              accuracy:
                type: number
                minimum: 0
                maximum: 1
                example: 0.8889
                description: 推定の確実度
            required:
              - name
              - accuracy
      required:
        - tags
      x-examples:
        example-1:
          tags:
            - name: kafuu_chino
              accuracy: 0.8889
    GetMachineLearningGeneralResponse:
      title: GetMachineLearningGeneralResponse
      type: object
      properties:
        url:
          type: string
          format: uri-reference
          minLength: 1
          maxLength: 100
          example: 'https://api.example.com/ml/result/12345.png'
      required:
        - url
      x-examples:
        example:
          url: 'https://api.example.com/ml/result/12345.png'
  parameters:
    SearchQuerySort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - l
          - d
        example: d
        default: d
      description: 'ソート方法 l:いいね数順 d:投稿日順'
    SearchQueryOrder:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - d
          - a
        default: d
        example: d
        minLength: 1
        maxLength: 1
      description: 'ソート方向 d:降順(大→小) a:昇順(小→大)'
    SearchQueryPage:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
    SearchQueryMylistAllow:
      name: with_mylisted
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        enum:
          - 1
          - 0
        example: 1
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
    SearchQueryMylistDeny:
      name: with_mylisted
      in: query
      schema:
        type: integer
        enum:
          - 0
          - 1
        example: 0
        default: 0
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
    SearchQueryPerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 20
        enum:
          - 20
          - 40
          - 60
          - 80
          - 100
        example: 20
        minimum: 20
        maximum: 100
      description: 1ページ辺りの要素数
    SearchQuerySortCatalog:
      in: query
      schema:
        type: string
        default: d
        enum:
          - c
          - d
          - l
          - 'n'
        example: d
      description: 'ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前'
      name: sort
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
tags:
  - name: ml
security:
  - Authorization: []
