openapi: 3.0.0
info:
  title: UsagiBooru Navigations API
  version: '2.0'
  contact:
    name: Omado
    url: 'https://twitter.com/shallow_omado'
    email: dsgamer777@gmail.com
  description: |-
    ナビゲーション関連API
    (Optional)
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.ja.html'
servers:
  - url: 'https://api.gochiusa.team'
    description: Prod
  - url: 'https://api-next.gochiusa.team'
    description: Staging
  - url: 'http://127.0.0.1:8080'
    description: Dev
paths:
  /navigations/characters:
    get:
      summary: Get character navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getCharacterNavigation
      description: |-
        イラスト数の多いキャラクター上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  /navigations/artists:
    get:
      summary: Get artist navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getArtistNavigation
      description: |-
        イラスト数の多い絵師上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  /navigations/tags:
    get:
      summary: Get tag navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getTagNavigation
      description: |-
        イラスト数の多いタグ上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  /navigations/uploaders:
    get:
      summary: Get uploader navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getUploaderNavigation
      description: |-
        イラスト数の多い投稿者上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
components:
  schemas:
    GetNavigationGeneralResponse:
      title: GetNavigationGeneralResponse
      type: object
      x-examples:
        example-copyright:
          navigations:
            - name: ご注文はうさぎですか?
              id: 1
              count: 1
        example-character:
          navigations:
            - name: 香風智乃
              id: 1
              count: 1
        example-general:
          navigations:
            - name: ロリ
              id: 1
              count: 1
        example-artist:
          navigations:
            - name: 彩電
              id: 1
              count: 1
        example-uploader:
          navigations:
            - name: お窓
              id: 1
              count: 1
      description: ''
      properties:
        navigations:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/NavigationStruct'
    NavigationStruct:
      title: NavigationStruct
      type: object
      description: サイト内上部ナビゲーションのエンドポイントで用いる応答モデル
      x-examples:
        example:
          name: 香風智乃
          id: 1
          count: 1204
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: 香風智乃
        id:
          type: integer
          example: 1
          minimum: 1
        count:
          type: integer
          example: 1204
          minimum: 1
      required:
        - name
        - id
        - count
  parameters:
    SearchQuerySort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - l
          - d
        example: d
        default: d
      description: 'ソート方法 l:いいね数順 d:投稿日順'
    SearchQueryOrder:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - d
          - a
        default: d
        example: d
        minLength: 1
        maxLength: 1
      description: 'ソート方向 d:降順(大→小) a:昇順(小→大)'
    SearchQueryPage:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
    SearchQueryMylistAllow:
      name: with_mylisted
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        enum:
          - 1
          - 0
        example: 1
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
    SearchQueryMylistDeny:
      name: with_mylisted
      in: query
      schema:
        type: integer
        enum:
          - 0
          - 1
        example: 0
        default: 0
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
    SearchQueryPerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 20
        enum:
          - 20
          - 40
          - 60
          - 80
          - 100
        example: 20
        minimum: 20
        maximum: 100
      description: 1ページ辺りの要素数
    SearchQuerySortCatalog:
      in: query
      schema:
        type: string
        default: d
        enum:
          - c
          - d
          - l
          - 'n'
        example: d
      description: 'ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前'
      name: sort
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
tags:
  - name: navigations
security:
  - Authorization: []
