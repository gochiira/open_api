openapi: 3.0.0
info:
  title: Gochiira Backend v2 API
  version: '2.0'
  contact:
    name: Omado
    url: 'https://twitter.com/shallow_omado'
    email: dsgamer777@gmail.com
  description: |-
    ごちイラの次バージョンで実装予定のAPI。
    なるべく仕様を変えないよう気をつけつつ、Structの統一を図った。
  license:
    name: GPLv3
    url: 'https://www.gnu.org/licenses/gpl-3.0.ja.html'
servers:
  - url: 'https://api.gochiusa.team'
    description: Prod
  - url: 'https://api-next.gochiusa.team'
    description: Staging
  - url: 'http://127.0.0.1:8080'
    description: Dev
paths:
  /accounts:
    post:
      summary: Create account
      operationId: createAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - accounts
      description: 新しいアカウントを作成します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStruct'
      security: []
  '/accounts/{accountID}':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 取得したいユーザーのアカウントID
    get:
      summary: Get account info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getAccount
      description: ユーザーのアカウント情報を取得します
      tags:
        - accounts
    delete:
      summary: Delete account info
      operationId: deleteAccount
      description: |-
        アカウントを削除します
        (本人または管理者のみがリクエストできます)
      tags:
        - accounts
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
              examples: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      parameters:
        - schema:
            type: string
          in: header
          name: password
          description: 削除確認用パスワード
    patch:
      summary: Edit account info
      operationId: editAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStruct'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - accounts
      description: |-
        アカウント情報を編集します
        (本人または管理者のみがリクエストできます)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStruct'
            examples:
              example:
                value:
                  userDisplayID: omado
                  userName: お窓
                  userPassword: kafuuch1n0
                  userOldPassword: h0t0c0c0a
                  userFavorite: 1
                  userTheme: 0
                  userPermission: 0
                  userLineID: dosugamea
                  userTwitterID: shallow_omado
        description: |-
          ユーザー本人、もしくは管理者のみデータを変更できます
          変更したいカラムを与え、値に変更後の値を与えると変更できます
          パスワードを変更する場合のみ、例外的に現在のパスワードが要求されます
  '/accounts/{accountID}/upload_history':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 取得したいユーザーのアカウントID
    get:
      summary: Get upload history
      tags:
        - accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUploadHistoryResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getUploadHistory
      description: イラスト投稿履歴を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: string
            enum:
              - d
            example: d
            minLength: 1
            maxLength: 1
          in: query
          name: sort
          description: 'ソート方法 d:最終更新'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /token/generate:
    parameters: []
    post:
      summary: Reissue api key
      operationId: reissueToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGenerateTokenResponse'
      description: Bot等向けの長期間有効なアクセストークンを生成します
      tags:
        - token
  /accounts/me:
    get:
      summary: Get user info (self)
      tags:
        - accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStruct'
      operationId: getAccountMe
      description: |-
        自分自身にまつわる情報をすべて取得します
        通常、ログイン時に一度だけ呼び出されます
    parameters: []
  /accounts/login/form:
    post:
      summary: Login with form
      tags:
        - accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLoginWithFormResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: loginWithForm
      description: IDとパスワードを用いてユーザー認証し、APIトークンを発行します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoginWithFormRequest'
            examples:
              user:
                value:
                  id: test_user
                  password: this_is_only_for_test
              admin:
                value:
                  id: test_admin
                  password: this_is_only_for_test
        description: ユーザーIDとパスワードをパラメータに取ります
      security: []
  /catalog/artists:
    get:
      summary: Get artist list
      tags:
        - catalog
      responses:
        '200':
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogArtistResponse'
              examples: {}
      operationId: getArtistList
      description: 絵師一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
    parameters: []
  /catalog/tags:
    get:
      summary: Get tag list
      tags:
        - catalog
      responses:
        '200':
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogTagResponse'
              examples: {}
      operationId: getTagList
      description: タグ一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
    parameters: []
  /catalog/characters:
    get:
      summary: Get character list
      tags:
        - catalog
      responses:
        '200':
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogTagResponse'
              examples: {}
      operationId: getCharacterList
      description: キャラクター一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  '/arts/{artID}':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 取得したいイラストのID
    get:
      summary: Get art info
      tags:
        - arts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '451':
          description: Unavailable For Legal Reasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getArt
      description: 指定したイラストを取得します
    delete:
      summary: Delete art
      operationId: delete-arts-artID
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        指定したイラストを削除します
        削除してほしくないため非推奨とします
        (このエンドポイントから削除したイラストは
        参照が不可能になるだけであり一定日数サーバー上に残されます)
      deprecated: true
      tags:
        - arts
    patch:
      summary: Edit art
      operationId: put-arts-artID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        指定したイラストの情報を編集します
        パラメータで与えられたデータに応じて柔軟に
        絵師名・タグ・キャラクター等を同時に書き換えます
      tags:
        - arts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtStruct'
        description: ''
  /navigations/characters:
    get:
      summary: Get character navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getCharacterNavigation
      description: |-
        イラスト数の多いキャラクター上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  /navigations/artists:
    get:
      summary: Get artist navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getArtistNavigation
      description: |-
        イラスト数の多い絵師上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  /navigations/tags:
    get:
      summary: Get tag navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getTagNavigation
      description: |-
        イラスト数の多いタグ上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  /navigations/uploaders:
    get:
      summary: Get uploader navigation tab (for site)
      tags:
        - navigations
      responses:
        '200':
          description: 応答のdataに配列で返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNavigationGeneralResponse'
              examples: {}
      operationId: getUploaderNavigation
      description: |-
        イラスト数の多い投稿者上位5件を取得します
        サイト内上部 ナビゲーションメニューで使用しています
  '/news/{newsID}':
    parameters:
      - schema:
          type: integer
          minimum: 1
          exclusiveMinimum: true
        name: newsID
        in: path
        required: true
        description: 対象のニュースID
    get:
      summary: Get news
      tags:
        - news
      responses:
        '200':
          description: 応答のdataに返却されます
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsStruct'
              examples: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getNews
      description: 指定したニュースの内容を取得します
    delete:
      summary: Delete news
      operationId: deleteNews
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - news
      description: |-
        指定したニュースを削除します
        管理者のみリクエストできます
    patch:
      summary: Edit news
      operationId: editNews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - news
      description: |-
        指定したニュースのタイトル/本文/カラーを編集します
        管理者のみリクエストできます
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsStruct'
  '/mylists/{mylistID}':
    parameters:
      - schema:
          type: integer
        name: mylistID
        in: path
        required: true
        description: 対象のマイリストID
    get:
      summary: Get mylist data
      tags:
        - mylist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MylistStruct'
              examples: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getMylist
      description: 指定したマイリストに登録されたイラスト一覧を取得します
      parameters: []
    delete:
      summary: Delete mylist
      operationId: deleteMylist
      description: マイリストを削除します
      tags:
        - mylist
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
    patch:
      summary: Edit mylist
      operationId: editMylist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MylistStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: マイリストのタイトル/説明文/内容(イラスト)を編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MylistStruct'
        description: 変更したいものを指定してリクエストします
      tags:
        - mylist
  /search/tag:
    get:
      summary: Search by tag
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
              examples: {}
      operationId: searchArtByTag
      description: 指定したタグを持つイラスト一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: integer
          in: query
          name: id
          description: タグID
          required: true
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /search/artist:
    get:
      summary: Search by artist
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
              examples:
                example:
                  value:
                    status: 200
                    message: found
                    data:
                      title: みふね
                      count: 4
                      current: 1
                      pages: 1
                      imgs:
                        - artID: 4
                          artistID: 1
                          title: 社畜のイラスト
                          caption: 会社に飼い慣らされ家畜のように扱われている男性会社員（サラリーマン）、俗にいう社畜のイラストです。
                          date: '2021-01-07 14:53:43'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: '?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 3
                          artistID: 1
                          title: なかなか当たらないガチャのイラスト
                          caption: 当たりが出る確率がとても低いガチャガチャを回し続けている人のイラストです。
                          date: '2021-01-07 14:51:59'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2016/02/blog-post_256.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 2
                          artistID: 1
                          title: 単位を落とす学生のイラスト（男性）
                          caption: 大学生の男の子が単位を落として焦っているイラストです。
                          date: '2021-01-07 12:53:04'
                          pages: 1
                          like: 2
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2016/10/blog-post_23.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 1
                          artistID: 1
                          title: パソコンのキャラクター（ノートパソコン）(笑顔)
                          caption: |
                            快調に動く笑顔のノート型のコンピューターと、壊れて困った顔をしているコンピューターのイラストです。
                          date: '2021-01-07 12:31:01'
                          pages: 1
                          like: 53
                          mylist: 1
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2017/01/blog-post_792.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
      operationId: searchArtByArtist
      description: 指定した絵師のイラスト一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: integer
          in: query
          name: id
          description: 絵師ID
          required: true
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /search/mylist:
    get:
      summary: Search by mylist
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
              examples:
                example:
                  value:
                    status: 200
                    message: found
                    data:
                      title: みふね
                      count: 4
                      current: 1
                      pages: 1
                      imgs:
                        - artID: 4
                          artistID: 1
                          title: 社畜のイラスト
                          caption: 会社に飼い慣らされ家畜のように扱われている男性会社員（サラリーマン）、俗にいう社畜のイラストです。
                          date: '2021-01-07 14:53:43'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: '?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 3
                          artistID: 1
                          title: なかなか当たらないガチャのイラスト
                          caption: 当たりが出る確率がとても低いガチャガチャを回し続けている人のイラストです。
                          date: '2021-01-07 14:51:59'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2016/02/blog-post_256.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 2
                          artistID: 1
                          title: 単位を落とす学生のイラスト（男性）
                          caption: 大学生の男の子が単位を落として焦っているイラストです。
                          date: '2021-01-07 12:53:04'
                          pages: 1
                          like: 2
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2016/10/blog-post_23.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 1
                          artistID: 1
                          title: パソコンのキャラクター（ノートパソコン）(笑顔)
                          caption: |
                            快調に動く笑顔のノート型のコンピューターと、壊れて困った顔をしているコンピューターのイラストです。
                          date: '2021-01-07 12:31:01'
                          pages: 1
                          like: 53
                          mylist: 1
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2017/01/blog-post_792.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: searchArtByMylist
      description: 指定したマイリストのイラスト一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: integer
          in: query
          name: id
          description: マイリストID
          required: true
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /search/keyword:
    get:
      summary: Search by keyword
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
              examples:
                example:
                  value:
                    status: 200
                    message: found
                    data:
                      title: cafe
                      count: 1
                      current: 1
                      pages: 1
                      imgs:
                        - artID: 6
                          artistID: 3
                          title: Cafe Image
                          caption: Ready for the breakfast rush to start
                          date: '2021-01-07 15:01:01'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://unsplash.com/photos/dwQRixazu9I?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 3
                            name: Andy Falconer
                          extension: jpg
      operationId: searchArtByKeyword
      description: 指定したキーワードを含むイラスト一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: string
            example: cafe
          in: query
          name: keyword
          description: 検索対象ワード
          required: true
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /search/all:
    get:
      summary: Search all arts
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
              examples:
                example:
                  value:
                    status: 200
                    message: found
                    data:
                      title: 全て
                      count: 8
                      current: 1
                      pages: 1
                      imgs:
                        - artID: 8
                          artistID: 5
                          title: tea pours into white teacup photo
                          caption: ''
                          date: '2021-01-07 15:16:58'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://unsplash.com/photos/oBoELXgJR1w?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 5
                            name: CHI CHEN
                          extension: jpg
                        - artID: 7
                          artistID: 4
                          title: clear glass cup with tea near brown ceramic teapot
                          caption: ''
                          date: '2021-01-07 15:15:28'
                          pages: 1
                          like: 1
                          mylist: 1
                          mylisted: true
                          originUrl: 'https://unsplash.com/photos/L82-kkEBOd0?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 4
                            name: Manki Kim
                          extension: jpg
                        - artID: 6
                          artistID: 3
                          title: Cafe Image
                          caption: Ready for the breakfast rush to start
                          date: '2021-01-07 15:01:01'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://unsplash.com/photos/dwQRixazu9I?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 3
                            name: Andy Falconer
                          extension: jpg
                        - artID: 5
                          artistID: 2
                          title: top view photography of heart latte coffee photo
                          caption: Cappuccino in a bed of fresh roasted coffee beans.
                          date: '2021-01-07 14:56:37'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://unsplash.com/photos/XOhI_kW_TaM?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 2
                            name: Nathan Dumlao
                          extension: jpg
                        - artID: 4
                          artistID: 1
                          title: 社畜のイラスト
                          caption: 会社に飼い慣らされ家畜のように扱われている男性会社員（サラリーマン）、俗にいう社畜のイラストです。
                          date: '2021-01-07 14:53:43'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: '?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 3
                          artistID: 1
                          title: なかなか当たらないガチャのイラスト
                          caption: 当たりが出る確率がとても低いガチャガチャを回し続けている人のイラストです。
                          date: '2021-01-07 14:51:59'
                          pages: 1
                          like: 1
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2016/02/blog-post_256.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 2
                          artistID: 1
                          title: 単位を落とす学生のイラスト（男性）
                          caption: 大学生の男の子が単位を落として焦っているイラストです。
                          date: '2021-01-07 12:53:04'
                          pages: 1
                          like: 2
                          mylist: 0
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2016/10/blog-post_23.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
                        - artID: 1
                          artistID: 1
                          title: パソコンのキャラクター（ノートパソコン）(笑顔)
                          caption: |
                            快調に動く笑顔のノート型のコンピューターと、壊れて困った顔をしているコンピューターのイラストです。
                          date: '2021-01-07 12:31:01'
                          pages: 1
                          like: 53
                          mylist: 1
                          mylisted: false
                          originUrl: 'https://www.irasutoya.com/2017/01/blog-post_792.html?page=1'
                          originService: 独自
                          nsfw: false
                          artist:
                            id: 1
                            name: みふね
                          extension: png
      operationId: searchArtByAll
      description: 登録されたイラスト一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /search/random:
    get:
      summary: Search by random
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: searchArtByRandom
      description: ランダムなイラストを1つ取得します
      tags:
        - search
      parameters:
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /search/image/self:
    post:
      summary: Search by image
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSearchByImageResponse'
      operationId: searchArtByImage
      description: 画像からごちイラ内に登録されたイラストを検索します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSearchByImageRequest'
    parameters: []
  /search/image/saucenao:
    post:
      summary: Search by image at saucenao
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSearchByImageAtSauceNaoResponse'
      operationId: searchArtByImageUsingSaucenao
      description: 画像からSauceNAOに登録されたイラストを検索します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSearchByImageRequest'
  /artists:
    post:
      summary: Create artist
      operationId: createArtist
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        新しい絵師を生成します(イラスト投稿時に存在しなければ自動で作成されるため
        直接操作する必要はありません)
      deprecated: true
      tags:
        - artists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistStruct'
  '/artists/{artistID}':
    get:
      summary: Get artist
      tags:
        - artists
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getArtist
      description: 指定した絵師の情報を取得します。存在しない情報欄にはnullが入ります。
    parameters:
      - schema:
          type: integer
        name: artistID
        in: path
        required: true
        description: 対象の絵師ID
    delete:
      summary: Delete artist
      operationId: deleteArtist
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        指定した絵師の情報を削除します
        (イラストによって参照されていない場合のみ削除できるため、通常利用機会はありません)
      deprecated: true
      tags:
        - artists
    patch:
      summary: Edit artist
      operationId: editArtist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        指定した絵師の情報を置き換えます。
        リクエストで指定されたパラメータだけを置き換えます。
      tags:
        - artists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistStruct'
        description: ''
  '/arts/{artID}/replace':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 置き換えしたい(画質が低い方の)イラストID
    patch:
      summary: Combine art info
      operationId: replaceArt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - arts
      description: |-
        パスパラメータで指定された低画質なイラストに対して
        クエリパラメータで指定されたより画質の良いイラストで統合(置き換え)処理を行います。
        画質が低い方のいいね・タグ・出典・コメントが画質が高い方のイラストに対して統合されます。
        置き換えられた画質が低い方のイラストは検索結果に表示されなくなりますが、IDを直接指定すれば閲覧できる状態で残ります。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReplaceArtRequest'
  '/arts/{artID}/replace_simulate':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 置き換えしたい(画質が低い方の)イラストID
    patch:
      summary: Combine art info(simulate)
      operationId: replaceArtSimulate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReplaceArtSimulateResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - arts
      description: |-
        パスパラメータで指定された低画質なイラストに対して
        クエリパラメータで指定されたより画質の良いイラストで統合(置き換え)処理の検証を行います。
        画質が低い方のいいね・タグ・出典・コメントが画質が高い方のイラストに対して統合されます。
        置き換えられた画質が低い方のイラストは検索結果に表示されなくなりますが、IDを直接指定すれば閲覧できる状態で残ります。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReplaceArtRequest'
  '/arts/{artID}/tags':
    get:
      summary: Get art tags
      tags:
        - arts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtTagsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getArtTags
      description: 指定したイラストに付いているタグのみを一覧で取得します
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 対象のイラストID
    patch:
      summary: Edit art tags
      operationId: editArtTags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtTagsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        指定したイラストのタグ一覧に、与えられたIDのタグを設定します
        削除も同様にこのエンドポイントを用います
        (イラスト本体の編集時に付けられたタグ名から
        自動的にタグIDを引き出し追加/削除を行う処理が追加されたため
        こちらのエンドポイントを使用する必要はありません)
      tags:
        - arts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutArtTagsRequest'
  '/arts/{artID}/likes/{likeType}':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: いいねしたいイラストのID
      - schema:
          type: string
          enum:
            - yellow
            - green
            - red
            - blue
          default: yellow
          example: yellow
        name: likeType
        in: path
        required: true
        description: いいね種別
    get:
      summary: Get art likes with specify type
      operationId: getArtLikesWithType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtLikesResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したイラストのいいねを取得します
      tags:
        - arts
    patch:
      summary: Plus art like (with using star)
      operationId: addArtLike
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtLikesResponse'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - arts
      description: |-
        指定したイラストのいいね数を1増加させます
        いいねする都度、likeTypeに指定されたスターを消費します
        (ToyMoneyApiに問い合わせを行った上で増加処理を行うため若干時間がかかります)
  '/arts/{artID}/likes':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: いいねしたいイラストのID
    get:
      summary: Get art likes
      operationId: getArtLikes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtDetailedLikesStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したイラストのいいねを取得します
      tags:
        - arts
  '/arts/{artID}/views':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 対象のイラストID
    get:
      summary: Get art views
      operationId: getArtViews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtViewsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したイラストの閲覧回数のみを取得します
      tags:
        - arts
    patch:
      summary: Plus art view
      operationId: addArtView
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtViewsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - arts
      description: |-
        指定したイラストの閲覧回数を1増加させます
        同一アカウントからのイラスト閲覧は1日1回のみカウントされます
  '/arts/{artID}/comments':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 対象のイラストID
    get:
      summary: Get art comments
      tags:
        - arts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtCommentsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getArtComments
      description: 指定したイラストに付いているコメントのみを一覧で取得します
    post:
      summary: Add art comment
      operationId: addArtComment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentStruct'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したイラストにコメントを追加します
      tags:
        - arts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditStruct'
  '/arts/{artID}/comments/{commentID}':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 対象のイラストID
      - schema:
          type: integer
        name: commentID
        in: path
        required: true
        description: 編集したいコメントのID
    delete:
      summary: Delete art comment
      operationId: deleteArtComment
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したイラストに付けたコメントを削除します
      tags:
        - arts
    get:
      summary: Get art comment
      operationId: getArtComment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したイラストに付いている、指定されたIDのコメントを取得します
      tags:
        - arts
    patch:
      summary: Edit art comment
      operationId: editArtComment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - arts
      description: |-
        指定したイラストに付けたコメントを編集します
        (ActivityPubを使用している場合、編集後の内容が再投稿されます)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditStruct'
  /arts:
    post:
      summary: Create art
      operationId: addArt
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - arts
      description: パラメータで与えられたイラストを投稿します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtStruct'
  /search/uploaders:
    get:
      summary: Search by uploader
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: searchArtByUploader
      description: 指定した投稿者のイラスト一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
  /catalog/uploaders:
    get:
      summary: Get uploader list
      tags:
        - catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogUploaderResponse'
      operationId: getUploaderList
      description: 投稿者一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  /invites:
    post:
      summary: Create invitation
      operationId: createInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - invites
      description: |-
        招待コードを発行します、一般ユーザーは1人につき1コードまで作成できます。
        管理者はcode/countを指定すると任意のコードを指定数作成できます。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteStruct'
  '/mylists/{mylistID}/finds':
    parameters:
      - schema:
          type: integer
        name: mylistID
        in: path
        required: true
        description: 対象のマイリストID
    post:
      summary: Find arts registered
      operationId: findInMylistByIds
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMylistFindsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        指定したイラスト(単数/複数)がマイリストに含まれているかを判定します
        検索リクエストでwith_mylisted=0としている場合、必要となる可能性があります
      tags:
        - mylist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMylistFindsRequest'
  /news:
    post:
      summary: Add news
      operationId: addNews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        ニュースを追加します
        (管理者のみリクエストできます)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsStruct'
      tags:
        - news
    get:
      summary: Get all news
      operationId: getNewsList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNewsListResponse'
      description: ニュース一覧を取得します
      tags:
        - news
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  '/accounts/{accountID}/notify/clients':
    get:
      summary: Get notify clients
      tags:
        - notify
      operationId: getNotifyClients
      description: 現在のユーザーが設定済みの通知クライアント一覧を取得します
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotifyClientsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      parameters: []
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 取得対象のアカウントID
  '/accounts/{accountID}/notify/clients/web':
    post:
      summary: Create webpush notify client
      operationId: addWebNotifyClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyClientStruct'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        クライアント側で作成したパブリック/プライベートVAPIDキーを
        userID、クライアント名、通知レベルと共にサーバーのデータベースに登録し
        通知クライアントの1種として保存する(何個でも設定できる)
      tags:
        - notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRegisterWebPushRequest'
        description: ''
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 取得対象のアカウントID
  '/accounts/{accountID}/notify/conditions':
    post:
      summary: Register notify condition
      operationId: registerNotifyCondition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyConditionStruct'
      description: 通知条件を追加します
      tags:
        - notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyConditionStruct'
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 取得対象のアカウントID
    get:
      summary: Get notify conditions
      operationId: getNotifyConditions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotifyConditionsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 通知条件一覧を取得します
      tags:
        - notify
      parameters:
        - schema:
            type: string
            maximum: 9
            example: all
            minimum: 0
            default: all
            enum:
              - all
              - tag
              - artist
          in: query
          name: type
          description: 条件種別
  '/accounts/{accountID}/notify/clients/line':
    post:
      summary: Create line notify client
      operationId: addLineNotifyClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyClientStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: '"ユーザー発行の"LINENotifyのトークンとデバイス名をPOSTして、通知クライアントの一種として保存する。(何個でも設定できる)'
      tags:
        - notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRegisterLineNotifyRequest'
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
  '/accounts/{accountID}/notify/clients/{notifyClientID}':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
      - schema:
          type: integer
        name: notifyClientID
        in: path
        required: true
        description: 対象の通知クライアントID
    get:
      summary: Get notify client
      tags:
        - notify
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyClientStruct'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getNotifyClient
      description: 指定した通知クライアント情報を取得します
    delete:
      summary: Delete notify client
      operationId: deleteNotifyClient
      description: 指定した通知クライアントを削除します
      tags:
        - notify
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
    patch:
      summary: Edit notify client
      operationId: editNotifyClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyClientStruct'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定した通知クライアント情報を編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyClientStruct'
      tags:
        - notify
  '/accounts/{accountID}/notify/conditions/{conditionID}':
    parameters:
      - schema:
          type: integer
        name: conditionID
        in: path
        required: true
        description: 対象の通知条件ID
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
    get:
      summary: Get notify condition
      tags:
        - notify
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyConditionStruct'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getNotifyCondition
      description: 通知条件を取得します
    delete:
      summary: Delete notify condition
      operationId: deleteNotifyCondition
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - notify
      description: 通知条件を削除します
    patch:
      summary: Edit notify condition
      operationId: editNotifyCondition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyConditionStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - notify
      description: 通知条件を編集します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyConditionStruct'
  /ranking/yearly/views:
    get:
      summary: Get yearly views ranking
      tags:
        - ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getYearlyViewsRanking
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: 年間閲覧数ランキングを取得します
  /ranking/yearly/likes:
    get:
      summary: Get yearly likes ranking
      tags:
        - ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getYearlyLikesRanking
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryMylistDeny'
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: 年間いいね数ランキングを取得します
  /ranking/monthly/views:
    get:
      summary: Get monthly views ranking
      tags:
        - ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getMonthlyViewsRanking
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryMylistDeny'
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: 月間閲覧数ランキングを取得します
  /ranking/monthly/likes:
    get:
      summary: Get monthly likes ranking
      tags:
        - ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getMonthlyLikesRanking
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryMylistDeny'
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: 月間いいね数ランキングを取得します
  /ranking/weekly/views:
    get:
      summary: Get weekly views ranking
      tags:
        - ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getWeeklyViewsRanking
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryMylistDeny'
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: 週間閲覧数ランキングを取得します
  /ranking/weekly/likes:
    get:
      summary: Get weekly likes ranking
      tags:
        - ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getWeeklyLikesRanking
      parameters:
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryMylistDeny'
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: 週間いいね数ランキングを取得します
  '/report/arts/{artID}':
    parameters:
      - schema:
          type: integer
        name: artID
        in: path
        required: true
        description: 対象のイラストID
    post:
      summary: Report art
      tags:
        - report
      operationId: reportArt
      description: |-
        指定したイラストを運営に通報します
        むやみに利用するとアカウントが停止される可能性があります
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportGeneralRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
  '/report/tags/{tagID}':
    parameters:
      - schema:
          type: integer
        name: tagID
        in: path
        required: true
        description: 対象のタグID
    post:
      summary: Report tag
      tags:
        - report
      operationId: reportTag
      description: |-
        指定したタグを運営に通報します
        むやみに利用するとアカウントが停止される可能性があります
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportGeneralRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
  '/report/user/{accountID}':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
    post:
      summary: Report user
      tags:
        - report
      operationId: reportUser
      description: |-
        指定したユーザーを運営に通報します
        むやみに利用するとアカウントが停止される可能性があります
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportGeneralRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
  '/report/wiki/{articleID}':
    parameters:
      - schema:
          type: integer
        name: articleID
        in: path
        required: true
        description: 対象の記事ID
    post:
      summary: Report article
      tags:
        - report
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: reportArticle
      description: |-
        指定した記事を運営に通報します
        むやみに利用するとアカウントが停止される可能性があります
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportGeneralRequest'
  /scrape:
    post:
      summary: Scrape content
      operationId: scrapeContent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostScrapeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - scrape
      description: |-
        渡されたURLのページ情報をスクレイピングします
        むやみに利用するとアカウントが停止される可能性があります
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostScrapeRequest'
  /upload:
    post:
      summary: Upload content
      operationId: uploadContent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUploadResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        画像や動画を投稿するエンドポイントです
        むやみに利用するとアカウントが停止される可能性があります
      tags:
        - upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUploadRequest'
  /search/image/ascii2d:
    post:
      summary: Search by image at ascii2d
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSearchByImageAtAscii2dResponse'
      operationId: searchArtByImageUsingAscii2d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSearchByImageRequest'
      description: 画像からAscii2dに登録されたイラストを検索します
  /search/tag/multiple:
    get:
      summary: Search by multiple tag
      tags:
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: searchArtByMultipleTag
      description: |-
        複数のタグを指定してイラストを検索します
        アカウントのレベルによって指定できる数は変動します(予定)
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: string
          in: query
          name: id
          description: タグIDをカンマ区切りで複数指定します
        - $ref: '#/components/parameters/SearchQueryMylistAllow'
        - $ref: '#/components/parameters/SearchQueryPerPage'
    parameters: []
  /garbage_collect:
    post:
      summary: Garbage collect
      operationId: garbageCollect
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: |-
        参照されていない 絵師情報/タグ情報を削除します
        (cron等でやってもいいかもしれないですが 現在は手動)
      tags:
        - garbage_collect
  /tags:
    post:
      summary: Add tag
      operationId: addTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - tags
      description: |-
        タグを追加します
        管理者のみリクエスト可能です
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagStruct'
  '/tags/{tagID}':
    parameters:
      - schema:
          type: integer
        name: tagID
        in: path
        required: true
        description: 対象のタグID
    get:
      summary: Get tag
      tags:
        - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getTag
      description: タグ情報を取得します
    delete:
      summary: Delete tag
      operationId: deleteTag
      tags:
        - tags
      description: |-
        タグを削除します
        (既にイラストに属しているタグの場合削除できません)
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
    patch:
      summary: Edit tag
      operationId: editTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - tags
      description: |-
        タグ情報を編集します
        タグ種別の変更もできます
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagStruct'
  /tags/finds:
    get:
      summary: Find tags by keyword
      tags:
        - tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindTagsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: findTags
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
          description: 検索したいワードを指定します
      description: キーワードからタグを検索します
  '/accounts/{accountID}/timeline/follow':
    post:
      summary: Follow artist
      operationId: followArtist
      description: 絵師をフォローします
      tags:
        - timeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LightArtistStruct'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
  '/accounts/{accountID}/timeline/unfollow':
    post:
      summary: Unfollow artist
      operationId: unfollowArtist
      description: 絵師のフォローを解除します
      tags:
        - timeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LightArtistStruct'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
  /search/timeline:
    get:
      summary: Get timeline
      tags:
        - timeline
        - search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
      operationId: getTimeline
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - schema:
            type: integer
          in: query
          name: id
          description: ユーザーID
        - $ref: '#/components/parameters/SearchQueryPerPage'
      description: タイムラインを取得します
    parameters: []
  '/accounts/{accountID}/timeline':
    get:
      summary: Get timeline followings
      tags:
        - timeline
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimelineFollowingResponse'
      operationId: getFollowingArtists
      description: フォロー中の絵師ID一覧を取得します
      parameters:
        - $ref: '#/components/parameters/SearchQuerySort'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
  /wiki:
    post:
      summary: Add wiki article
      operationId: addWikiArticle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiArticleStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: Wikiの記事を作成します
      tags:
        - wiki
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WikiArticleStruct'
    get:
      summary: Get wiki articles
      operationId: getWikiArticles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWikiArticlesResponse'
      description: 全記事一覧を取得します
      tags:
        - wiki
      parameters:
        - $ref: '#/components/parameters/SearchQuerySortCatalog'
        - $ref: '#/components/parameters/SearchQueryOrder'
        - $ref: '#/components/parameters/SearchQueryPage'
        - $ref: '#/components/parameters/SearchQueryPerPage'
  '/wiki/{articleID}':
    parameters:
      - schema:
          type: integer
        name: articleID
        in: path
        required: true
        description: 対象の記事ID
    get:
      summary: Get wiki article
      tags:
        - wiki
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiArticleStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getWikiArticle
      description: Wikiの記事を取得します
    delete:
      summary: Delete wiki article
      operationId: deleteWikiArticle
      tags:
        - wiki
      description: Wikiの記事を削除します
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
    patch:
      summary: Edit wiki article
      operationId: editWikiArticle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiArticleStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: Wikiの記事を編集します
      tags:
        - wiki
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WikiArticleStruct'
  /wiki/find:
    get:
      summary: Find wiki article
      tags:
        - wiki
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: findWikiArticle
      description: Wikiの記事が存在するかを確認します
      parameters:
        - schema:
            type: integer
          in: query
          name: type
          description: '対象の記事種別 0:ユーザー 1:タグ 2:絵師'
        - schema:
            type: integer
          in: query
          name: id
          description: 対象の記事ID
  '/activitypub/uploader/{accountID}/outbox':
    get:
      summary: Provide federation user message
      tags:
        - activitypub
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/GetActivityPubGeneralResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getActivityPubUploaderOutbox
      description: 他のサーバーがこのユーザーのメッセージを受け取るときにGETされる
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
  '/activitypub/artist/{artistID}/outbox':
    get:
      summary: Provide federation artist message
      tags:
        - activitypub
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/GetActivityPubGeneralResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getActivityPubArtistOutbox
      description: 他のサーバーがこのユーザーのメッセージを受け取るときにGETされる
    parameters:
      - schema:
          type: integer
        name: artistID
        in: path
        required: true
        description: 対象の絵師ID
  /activitypub/server/inbox:
    post:
      summary: Recieve federation to server message
      operationId: postActivityPubServerInbox
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 他のサーバーがこのサーバーに向けてメッセージを送るときにPOSTされる
      tags:
        - activitypub
      requestBody:
        content:
          application/activity+json:
            schema:
              $ref: '#/components/schemas/PostActivityPubGeneralRequest'
    get:
      summary: Check federation server message
      operationId: getActivityPubServerInbox
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/GetActivityPubGeneralResponse'
      description: このサーバーが自分自身に来ている通知などを取得する際にGETされる
      tags:
        - activitypub
  /activitypub/server/outbox:
    get:
      summary: Provide federation server message
      tags:
        - activitypub
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/GetActivityPubGeneralResponse'
      operationId: getActivityPubServerOutbox
      description: 他のサーバーがこのサーバーのメッセージを受け取るときにGETされる
    post:
      summary: Send federation server message
      operationId: postActivityPubServerOutbox
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: このサーバーが他のサーバーに向けてメッセージを送るときにPOSTされる
      tags:
        - activitypub
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostActivityPubGeneralRequest'
  '/activitypub/artist/{artistID}':
    parameters:
      - schema:
          type: integer
        name: artistID
        in: path
        required: true
        description: 対象の絵師ID
    get:
      summary: Get activitypub artist actor
      tags:
        - activitypub
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/ActivityPubActorStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getActivityPubArtistActor
      description: |-
        ActivityPubのユーザー情報(絵師)を返す
        (実際使うときは https://example.com/artist/{displayID} からリダイレクト?)
  '/activitypub/uploader/{accountID}':
    parameters:
      - schema:
          type: string
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
    get:
      summary: Get activitypub uploader actor
      tags:
        - activitypub
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/ActivityPubActorStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getActivityPubUploaderActor
      description: |-
        ActivityPubのユーザー情報(投稿者)を返す
        (実際使うときは https://example.com/uploader/{displayID} からリダイレクト?)
  /activitypub/server:
    get:
      summary: Get activitypub server base
      tags:
        - activitypub
      responses:
        '200':
          description: OK
          content:
            application/activity+json:
              schema:
                $ref: '#/components/schemas/ActivityPubActorStruct'
      operationId: getActivityPubServerActor
      description: ActivityPubのユーザー情報(サーバー)を返す
  '/invites/{inviteID}':
    parameters:
      - schema:
          type: string
        name: inviteID
        in: path
        required: true
        description: 対象の招待ID
    get:
      summary: Get invite
      tags:
        - invites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteStruct'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getInvite
      description: 指定した招待コードの情報を取得します
    delete:
      summary: Delete invite
      operationId: deleteInvite
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定した招待コードを無効化します
      tags:
        - invites
  '/accounts/{accountID}/mylists':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
    get:
      summary: Get user mylists
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMylistListResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getUserMylists
      description: 指定したユーザーのマイリスト一覧を取得します
      tags:
        - mylist
    post:
      summary: Create user mylist
      operationId: createMylist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MylistStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: マイリストを作成します
      tags:
        - mylist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MylistStruct'
  '/accounts/{accountID}/mutes':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
    get:
      summary: Get mute list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMutesResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getMutes
      description: 指定したアカウントのユーザーのミュート一覧を取得します
      tags:
        - mutes
    post:
      summary: Add mute
      operationId: addMute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteStruct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したアカウントのユーザーのミュートを追加します
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteStruct'
      tags:
        - mutes
  '/accounts/{accountID}/mutes/{muteID}':
    parameters:
      - schema:
          type: integer
        name: accountID
        in: path
        required: true
        description: 対象のアカウントID
      - schema:
          type: integer
        name: muteID
        in: path
        required: true
        description: 対象のミュートID
    get:
      summary: Get mute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteStruct'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getMute
      description: 指定したミュート情報を取得します
      tags:
        - mutes
    delete:
      summary: Delete mute
      operationId: deleteMute
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 指定したミュート情報を削除します
      tags:
        - mutes
  /mylists:
    get:
      summary: Get mylist list
      tags:
        - mylist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMylistListResponse'
      operationId: getMylists
      description: 全ユーザーの作成したマイリスト一覧を取得します
      parameters:
        - schema:
            type: boolean
          in: query
          name: force_all
          description: 管理者の場合非公開含めて一括取得できる
  /token/verify:
    post:
      summary: Verify token
      operationId: verifyToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - token
      description: トークンが使用可能か検証します
  /token/revoke:
    post:
      summary: Revoke token
      operationId: revokeToken
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      description: 発行済の長期間有効トークンを無効化します
      tags:
        - token
  /ml/predict/nsfw:
    post:
      summary: Predict image nsfw
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: predictNsfw
      description: |-
        指定された画像がR18かNudeNet/TensorflowLiteを使い推測します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
    parameters: []
  /ml/predict/tags:
    post:
      summary: Predict image tags
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: predictTags
      description: |-
        指定された画像のタグをDeepDanbooruで推測します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
  /ml/transparent:
    post:
      summary: Transparent image
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: transparentImage
      description: |-
        指定された画像の背景をrembgまたはhttps://github.com/zymk9/Yet-Another-Anime-Segmenterを使い透過します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
  /ml/waifu2x:
    post:
      summary: Waifu2x image
      operationId: scaleWaifu2x
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      tags:
        - ml
      description: |-
        指定された画像をwaifu2x-converter-cpp等で拡大します
        (管理者のみ使用可)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
      parameters:
        - schema:
            type: number
            default: 2
            maximum: 3
            minimum: 1
          in: query
          name: scale
          required: true
          description: 拡大レベル
        - schema:
            type: integer
            minimum: 0
            maximum: 3
            enum:
              - 0
              - 1
              - 2
              - 3
            example: 1
            default: 1
          in: query
          name: denoise
          required: true
          description: ノイズ除去レベル
  '/ml/polling/{pollingID}':
    parameters:
      - schema:
          type: integer
        name: pollingID
        in: path
        required: true
        description: 対象のポーリングID
    get:
      summary: Get ml polling
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPollingFinishResponse'
        '304':
          description: Not Modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getPolling
      description: |-
        処理結果が返ってくるまでここをPollingします
        1req/10s ぐらいのリクエストでお願いします
  '/ml/predict/nsfw/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get nsfw predict result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPredictNsfwResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getNsfwPredictResult
      description: |-
        NSFW推定の処理結果を返します
        結果データは1日で削除されます
  '/ml/predict/tags/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get tags predict result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPredictTagsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getTagPredictResult
      description: |-
        タグ推定の処理結果を返します
        結果データは1日で削除されます
  '/ml/transparent/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get transparent result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineLearningGeneralResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getTransparentImageResult
      description: |-
        透過の処理結果を返します
        結果画像は1日で削除されます
  '/ml/waifu2x/result/{resultID}':
    parameters:
      - schema:
          type: integer
        name: resultID
        in: path
        required: true
        description: 対象の結果ID
    get:
      summary: Get waifu2x result
      tags:
        - ml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineLearningGeneralResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
      operationId: getScaleWaifu2xResult
      description: |-
        Waifu2xの処理結果を返します
        結果画像は1日で削除されます
components:
  schemas:
    LightArtStruct:
      title: LightArtStruct
      type: object
      x-examples:
        example:
          artID: 1
          title: 魔法少女は深淵になにをみるか？
          caption: Ｃ８９の新刊表紙となっていますっ
          datetime: '2015-12-27T07:29:00Z'
          page: 1
          likes: 0
          views: 0
          mylists: 0
          mylisted: false
          uploader:
            accountID: 1
            name: お窓
          artists:
            - artistID: 1
              name: 彩電
          originUrl: 'https://www.pixiv.net/artworks/54265978'
          originService: Pixiv
          nsfw: false
          file:
            ipfsHash:
              thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
          similarity: 0
      description: 検索の応答モデル。配列で並んで返される。
      properties:
        artID:
          type: integer
          description: イラストID
          minimum: 1
          example: 1
        title:
          type: string
          minLength: 1
          description: イラスト(作品)名
          example: 魔法少女は深淵になにをみるか？
        caption:
          type: string
          description: |-
            説明文
            NOTE: 通常出典記載の説明文と同じ物が入る
          example: Ｃ８９の新刊表紙となっていますっ
          minLength: 1
        datetime:
          type: string
          example: '2015-12-27T07:29:00Z'
          description: '登録日(%Y-%m-%d %H:%M:%S)'
          format: date-time
        page:
          type: integer
          description: グループになっている場合のページ番号
          default: 1
          example: 1
          minimum: 1
          format: int32
        likes:
          type: integer
          description: 累計いいね数
          minimum: 0
          example: 0
          default: 0
          format: int64
        views:
          type: integer
          description: 累計閲覧数
          minimum: 0
          example: 0
          default: 0
          format: int64
        mylists:
          type: integer
          description: マイリスト済みのユーザー数
          minimum: 0
          example: 0
          default: 0
          format: int64
        mylisted:
          type: boolean
          description: リクエストしたユーザーがマイリストしているか
          default: false
        uploader:
          $ref: '#/components/schemas/LightAccountStruct'
        artists:
          type: array
          description: 絵師情報(複数可)
          items:
            $ref: '#/components/schemas/LightArtistStruct'
        originUrl:
          type: string
          minLength: 1
          description: 出典URL
          example: 'https://www.pixiv.net/artworks/54265978'
          format: uri-reference
        originService:
          type: string
          minLength: 1
          description: 出典のサービス名
          example: Pixiv
        nsfw:
          type: boolean
          description: アダルトコンテンツか否か
          default: false
        file:
          type: object
          properties:
            ipfsHash:
              type: object
              description: IPFSのハッシュ情報
              properties:
                thumb:
                  type: string
                  description: サムネイルハッシュ
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                orig:
                  type: string
                  description: Raw画像ハッシュ
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
        similarity:
          type: number
          description: 元画像との類似度(画像検索のみ)
          minimum: 0
          maximum: 1
    NewsStruct:
      title: NewsStruct
      type: object
      description: サイト内の新着情報モデル。
      x-examples:
        example:
          newsID: 1
          date: '2021-03-22'
          color: 1
          title: Welcome to UsagiBooru!
          body: This is next generation imageboard. This is challenge. I hope someone loves this project.
          author:
            accountID: 1
            name: お窓
      properties:
        newsID:
          type: integer
          description: ニュースID
          minimum: 1
          example: 1
        date:
          type: string
          description: 投稿日付時刻
          format: date
          example: '2021-03-22'
        color:
          type: integer
          maximum: 9
          minimum: 1
          description: ニュース表記色(色はフロントエンドの実装次第)
          default: 1
          example: 1
        title:
          type: string
          minLength: 1
          maxLength: 50
          description: ニュースタイトル 50文字まで
          example: Welcome to UsagiBooru!
        body:
          type: string
          minLength: 1
          maxLength: 3000
          description: ニュース本文 3000文字まで
          example: This is next generation imageboard. This is challenge. I hope someone loves this project.
        author:
          $ref: '#/components/schemas/LightAccountStruct'
    NavigationStruct:
      title: NavigationStruct
      type: object
      description: サイト内上部ナビゲーションのエンドポイントで用いる応答モデル
      x-examples:
        example:
          name: 香風智乃
          id: 1
          count: 1204
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: 香風智乃
        id:
          type: integer
          example: 1
          minimum: 1
        count:
          type: integer
          example: 1204
          minimum: 1
      required:
        - name
        - id
        - count
    AccountStruct:
      title: AccountStruct
      type: object
      x-examples:
        example-admin:
          accountID: 1
          displayID: omado
          apiKey: DUMMY_ADMIN_API_KEY
          apiSeq: 1
          permission: 9
          password: kafuuch1n0
          oldPassword: h0t0c0c0a
          totpEnabled: false
          name: お窓
          description: 開発者さん
          favorite: 1
          access:
            canInvite: true
            canLike: true
            canComment: true
            canCreatePost: true
            canEditPost: true
            canApprovePost: true
          inviter:
            accountID: 1
            name: お窓
          invite:
            inviteID: 1
            code: USAGIDEV
            invitedCount: 0
          notify:
            hasLineNotify: false
            hasWebNotify: false
          ipfs:
            gatewayUrl: 'https://cloudflare-ipfs.com'
            nodeUrl: ''
            gatewayEnabled: false
            nodeEnabled: false
            pinEnabled: true
        example-user:
          accountID: 2
          displayID: chino
          apiKey: DUMMY_API_KEY
          apiSeq: 1
          permission: 0
          password: h0t0c0c0a
          oldPassword: kafuuch1n0
          totpEnabled: false
          name: 香風智乃
          description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
          favorite: 1
          access:
            canInvite: true
            canLike: true
            canComment: true
            canCreatePost: true
            canEditPost: false
            canApprovePost: false
          inviter:
            accountID: 1
            name: お窓
          invite:
            inviteID: 1
            code: USAGIDEV
            invitedCount: 0
          notify:
            hasLineNotify: false
            hasWebNotify: false
          ipfs:
            gatewayUrl: 'https://cloudflare-ipfs.com'
            nodeUrl: ''
            gatewayEnabled: false
            nodeEnabled: false
            pinEnabled: false
      description: アカウントの取得/編集に使うリクエスト
      properties:
        accountID:
          type: integer
          description: ユーザーID
          example: 1
        displayID:
          type: string
          description: (Twitterのような)表示IDを指定します。ここで指定したIDがログインに使用されます。英数字のみ入力できます。
          example: omado
          maxLength: 20
          minLength: 3
        apiKey:
          type: string
          description: APIキー
          example: DUMMY_API_KEY
        apiSeq:
          type: integer
          description: 長期間有効トークン検証用シーケンス
          minimum: 1
          example: 1
        permission:
          type: integer
          description: '権限レベル 0:普通 5:Modelator 9:SysOp'
          example: 0
          minimum: 0
          default: 0
        password:
          type: string
          description: 新しいパスワードを入力します
          example: kafuuch1n0
          format: password
          maxLength: 50
          minLength: 8
        oldPassword:
          type: string
          description: |-
            現時点のパスワードを入力します。
            userPasswordを変更する場合に必要となります。
          example: h0t0c0c0a
          format: password
          maxLength: 50
          minLength: 8
        totpEnabled:
          type: boolean
          description: TOTPが有効かが入ります
          default: false
        name:
          type: string
          description: 他のユーザーに表示されるユーザー名/投稿者名
          example: お窓
          maxLength: 20
          minLength: 1
        description:
          type: string
          description: 他のユーザーに表示されるユーザー説明文/投稿者説明
          example: 開発者さん
        favorite:
          type: integer
          description: ユーザーの推しキャラ(タグID)を選択します
          example: 1
          minimum: 0
        access:
          type: object
          description: 管理者権限とは別の細かな権限
          properties:
            canInvite:
              type: boolean
              description: 招待できるか
              default: true
            canLike:
              type: boolean
              description: いいねできるか
              default: true
            canComment:
              type: boolean
              description: コメントできるか
              default: true
            canCreatePost:
              type: boolean
              description: 投稿できるか
              default: true
            canEditPost:
              type: boolean
              description: 投稿を編集できるか
              default: false
            canApprovePost:
              type: boolean
              description: 投稿を承認できるか
              default: false
        inviter:
          $ref: '#/components/schemas/LightAccountStruct'
        invite:
          type: object
          description: 招待情報
          properties:
            inviteID:
              type: integer
              description: 招待通し番号
              example: 1
            code:
              type: string
              description: 招待コード(shortuuid)
              minLength: 6
              maxLength: 12
              example: USAGIDEV
            invitedCount:
              type: integer
              description: 招待した人数の累計(誰を招待したかは表示されない)
              minimum: 0
              example: 0
              default: 0
        notify:
          type: object
          description: 通知クライアントを設定済みか
          properties:
            hasLineNotify:
              type: boolean
              default: false
            hasWebNotify:
              type: boolean
              default: false
        ipfs:
          type: object
          description: IPFS設定
          properties:
            gatewayUrl:
              type: string
              example: 'https://cloudflare-ipfs.com'
              default: 'https://cloudflare-ipfs.com'
              format: uri-reference
              description: 使用する任意のゲートウェイアドレス
            nodeUrl:
              type: string
              format: uri-reference
              description: 使用する任意のノードアドレス
            gatewayEnabled:
              type: boolean
              default: false
              description: IPFSゲートウェイを使用するか否か
            nodeEnabled:
              type: boolean
              default: false
              description: IPFSノードを使用するか否か
            pinEnabled:
              type: boolean
              description: マイリストを自動Pinningするか
              default: false
    ArtStruct:
      description: イラスト編集リクエスト
      type: object
      title: ArtStruct
      x-examples:
        example:
          artID: 1
          title: 魔法少女は深淵になにをみるか？
          caption: Ｃ８９の新刊表紙となっていますっ
          datetime: '2015-12-27T07:29:00Z'
          page: 1
          likes: 0
          views: 0
          mylists: 0
          mylisted: false
          uploader:
            accountID: 1
            name: お窓
          artists:
            - artistID: 1
              name: 彩電
          contributors:
            - accountID: 1
              name: お窓
          approvers:
            - accountID: 1
              name: お窓
          originUrl: 'https://www.pixiv.net/artworks/54265978'
          originService: Pixiv
          nsfw: false
          status: public
          replaces: []
          tags:
            copyrights:
              - tagID: 1
                name: ご注文はうさぎですか?
                nsfw: false
            characters:
              - tagID: 2
                name: 香風智乃
                nsfw: false
            generals:
              - tagID: 3
                name: ロリ
                nsfw: false
            metas:
              - tagID: 4
                name: FHD
                nsfw: false
          detailedLikes:
            yellow: 0
            green: 0
            red: 0
            blue: 0
          file:
            original:
              width: 1200
              height: 1569
              size: 1385794
              extension: png
              pHash: e5d2de31c62dd320
              sha256: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
            ipfsHash:
              thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              small: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              large: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              info: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
      properties:
        artID:
          type: integer
          description: イラストID
          example: 1
          minimum: 1
        title:
          type: string
          minLength: 1
          description: 'イラスト(作品)名 NOTE: 連番の場合は (2) (3)のような番号が入る'
          example: 魔法少女は深淵になにをみるか？
        caption:
          type: string
          minLength: 1
          description: '説明文 NOTE: 通常出典に記載されていた内容そのままが入る'
          example: Ｃ８９の新刊表紙となっていますっ
        datetime:
          type: string
          description: '登録日時(%Y-%m-%d %H:%M:%S)'
          example: '2015-12-27T07:29:00Z'
          format: date-time
        page:
          type: integer
          description: グループになっている場合のページ番号
          minimum: 1
          default: 1
          example: 1
          format: int32
        likes:
          type: integer
          minimum: 0
          description: 累計いいね数
          default: 0
          example: 0
          format: int64
        views:
          type: integer
          minimum: 0
          description: 累計閲覧数
          example: 0
          default: 0
          format: int64
        mylists:
          type: integer
          minimum: 0
          description: 累計マイリスト数
          example: 0
          default: 0
          format: int64
        mylisted:
          type: boolean
          default: false
          description: マイリスト登録済みか否か
        uploader:
          $ref: '#/components/schemas/LightAccountStruct'
        artists:
          type: array
          description: 絵師情報(複数可)
          items:
            $ref: '#/components/schemas/LightArtistStruct'
        contributors:
          type: array
          description: 投稿者情報(複数可)
          items:
            $ref: '#/components/schemas/LightAccountStruct'
        approvers:
          type: array
          description: 承認者情報(複数可)
          items:
            $ref: '#/components/schemas/LightAccountStruct'
        originUrl:
          type: string
          minLength: 1
          description: 出典URL
          example: 'https://www.pixiv.net/artworks/54265978'
          format: uri-reference
        originService:
          type: string
          minLength: 1
          description: 出典サービス名
          example: Pixiv
        nsfw:
          type: boolean
          description: アダルトコンテンツかどうか
          default: false
        status:
          type: string
          description: 公開/非公開等の表示状態
          enum:
            - public
            - hidden
            - deleted-admin
            - deleted-legal
            - deleted-uploader
          example: public
          default: hidden
        replaces:
          type: array
          description: 置き換え履歴データ
          items:
            $ref: '#/components/schemas/ReplaceStruct'
        tags:
          type: object
          description: タグ情報
          properties:
            copyrights:
              type: array
              description: 出典タグ
              items:
                $ref: '#/components/schemas/TagStruct'
            characters:
              type: array
              description: キャラクタータグ
              items:
                $ref: '#/components/schemas/TagStruct'
            generals:
              type: array
              description: 一般タグ
              items:
                $ref: '#/components/schemas/TagStruct'
            metas:
              type: array
              description: システムタグ
              items:
                $ref: '#/components/schemas/TagStruct'
        detailedLikes:
          $ref: '#/components/schemas/ArtDetailedLikesStruct'
        file:
          type: object
          properties:
            original:
              type: object
              properties:
                width:
                  type: integer
                  description: RAW画像の横方向のピクセル数
                  example: 1200
                  maximum: 100000
                  minimum: 1
                  format: int32
                height:
                  type: integer
                  description: RAW画像の縦方向のピクセル数
                  minimum: 1
                  maximum: 100000
                  example: 1569
                  format: int32
                size:
                  type: integer
                  description: ファイルサイズをbytesで入力
                  maximum: 1099511627776
                  format: int32
                  minimum: 1
                  default: 0
                  example: 1385794
                extension:
                  type: string
                  description: 拡張子(通常、jpgもしくはpng)
                  enum:
                    - jpg
                    - jpeg
                    - png
                    - webp
                    - gif
                  example: png
                  default: png
                  minLength: 1
                  maxLength: 10
                pHash:
                  type: string
                  description: 画像ハッシュ
                  example: e5d2de31c62dd320
                  minLength: 1
                  maxLength: 64
                sha256:
                  type: string
                  description: ファイルハッシュ
                  example: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
                  minLength: 64
                  maxLength: 64
            ipfsHash:
              type: object
              properties:
                thumb:
                  type: string
                  description: このイラストのサムネイル画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                small:
                  type: string
                  description: このイラストのSmall画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                large:
                  type: string
                  description: このイラストのLarge画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                orig:
                  type: string
                  description: このイラストのRAW画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                info:
                  type: string
                  description: このイラスト情報のJSONデータハッシュ
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
    PostLoginWithFormRequest:
      title: PostLoginWithFormRequest
      type: object
      description: ''
      x-examples:
        admin:
          id: omado
          password: kafuuch1n0
        user:
          id: chino
          password: h0t0c0c0a
      properties:
        id:
          type: string
          minLength: 1
          description: ログインID
        password:
          type: string
          minLength: 1
          description: ログインパスワード
        totpCode:
          type: string
          description: ログインTOTPトークン
      required:
        - id
        - password
    TagStruct:
      title: TagStruct
      type: object
      x-examples:
        example-copyright:
          tagID: 1
          type: copyright
          name: ご注文はうさぎですか?
          description: こころぴょんぴょんする漫画 from 芳文社
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
        example-character:
          tagID: 2
          type: character
          name: 香風智乃
          description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
        example-general:
          tagID: 3
          type: general
          name: ロリ
          description: 小さな女の子
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
        example-meta:
          tagID: 4
          type: meta
          name: FHD
          description: フルHD並の解像度がある画像
          nsfw: false
          issuer:
            accountID: 1
            name: お窓
          parent: []
          child: []
          count: 0
          lcount: 0
      description: タグデータモデル
      properties:
        tagID:
          type: integer
          minimum: 1
          description: サイト内通しタグ番号
        type:
          type: string
          description: タグ種別
          enum:
            - copyright
            - character
            - general
            - meta
          default: general
          example: general
        name:
          type: string
          minLength: 1
          maxLength: 20
          description: タグの名称
        description:
          type: string
          description: タグの説明文
          maxLength: 280
          minLength: 0
        nsfw:
          type: boolean
          description: アダルトコンテンツが含まれるタグか
          default: false
        issuer:
          $ref: '#/components/schemas/LightAccountStruct'
        parent:
          type: array
          description: 親となるタグ
          minItems: 0
          items:
            $ref: '#/components/schemas/LightTagStruct'
        child:
          type: array
          description: 子となるタグ
          minItems: 0
          items:
            $ref: '#/components/schemas/LightTagStruct'
        count:
          type: integer
          description: タグに属する作品数
          example: 0
          minimum: 0
          default: 0
        lcount:
          type: integer
          description: タグに属するいいね数
          minimum: 0
          example: 0
          default: 0
    LightTagStruct:
      title: LightTagStruct
      type: object
      x-examples:
        example-copyright:
          tagID: 1
          type: copyright
          name: ご注文はうさぎですか?
        example-character:
          tagID: 2
          type: character
          name: 香風智乃
        example-general:
          tagID: 3
          type: general
          name: ロリ
        example-meta:
          tagID: 4
          type: meta
          name: FHD
      description: タグデータ簡易モデル
      properties:
        tagID:
          type: integer
          minimum: 1
          description: サイト内通しタグ番号
          example: 2
        name:
          type: string
          minLength: 1
          maxLength: 20
          description: タグの名称
          example: 香風智乃
    ReplaceStruct:
      description: イラストを置き換えた情報のモデル(簡易型イラストモデル)
      type: object
      x-examples:
        example:
          artID: 1
          title: チノちゃん
          caption: ''
          date: '2021-03-05 01:27:22'
          originService: Pixiv
          originUrl: 'https://www.pixiv.net/artworks/88062684'
          width: 750
          height: 1200
          filesize: 2M
      title: ReplaceStruct
      properties:
        artID:
          type: integer
          description: サイト内イラスト通し番号
        title:
          type: string
          minLength: 1
          description: 作品名
        caption:
          type: string
          minLength: 1
          description: 作品の説明文
        date:
          type: string
          description: 投稿日付
        originService:
          type: string
          minLength: 1
          description: 出典サービス名
        originUrl:
          type: string
          minLength: 1
          description: 出典URL
        width:
          type: integer
          description: RAW画像の横幅
        height:
          type: integer
          description: RAW画像の縦幅
        filesize:
          type: string
          minLength: 1
          description: ファイルサイズに単位を付けた人間が読めるもの
      required:
        - artID
        - title
        - caption
        - date
        - originService
        - originUrl
        - width
        - height
        - filesize
    UploadHistoryStruct:
      description: アップロード履歴
      type: object
      title: UploadHistory
      x-examples:
        example:
          uploadID: 12045
          started: '2021-02-21 22:24:22'
          finished: '2021-02-21 22:24:27'
          status: 5
          artID: 9381
      properties:
        uploadID:
          type: integer
          format: int32
          description: 通し投稿履歴番号(インデックス用)
          minimum: 1
          example: 1
        started:
          type: string
          description: データ登録処理開始時刻
          minLength: 19
          maxLength: 19
          example: '2021-02-21 22:24:22'
        finished:
          type: string
          description: データ登録完了時刻
          minLength: 19
          maxLength: 19
          example: '2021-02-21 22:24:27'
        status:
          type: integer
          description: '登録処理結果 5:成功 9:内部エラー'
          minimum: 0
          maximum: 9
          example: 5
          enum:
            - 0
            - 5
            - 9
          default: 0
        artID:
          type: integer
          format: int32
          description: 投稿に成功した場合入るID
          minimum: 1
          example: 1
      required:
        - uploadID
        - started
        - finished
        - status
        - artID
    GetUploadHistoryResponse:
      title: GetUploadHistoryResponse
      type: object
      x-examples:
        example:
          pagination:
            title: 投稿履歴一覧
            type: upload-history
            count: 1
            current: 1
            pages: 1
            perPage: 20
          contents:
            - uploadID: 1
              started: '2021-02-21 22:24:22'
              finished: '2021-02-21 22:24:27'
              status: 5
              artID: 1
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          description: |-
            指定された範囲で一致するデータ
            一致するものがなければ空配列
          minItems: 0
          items:
            $ref: '#/components/schemas/UploadHistoryStruct'
    PostGenerateTokenResponse:
      title: PostGenerateTokenResponse
      type: object
      x-examples:
        example:
          apiKey: DUMMY_API_KEY
      properties:
        apiKey:
          type: string
          minLength: 1
    PostLoginWithFormResponse:
      title: PostLoginWithFormResponse
      type: object
      x-examples:
        example:
          apiKey: DUMMY_API_KEY
      description: ''
      properties:
        apiKey:
          type: string
          minLength: 1
    ArtistStruct:
      title: ArtistStruct
      type: object
      x-examples:
        example:
          artistID: 1
          contributors:
            - accountID: 1
              name: お窓
          name:
            - 彩電
          description: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
          group:
            - こねこぼたん
          pixivID:
            - 40436
          twitterID:
            - harufcs
          mastodon:
            - 'https://pawoo.net/@saiden'
          homepage:
            - 'http://konebota.x0.com/PAGE/'
          count: 1
          lcount: 1204
      description: ''
      properties:
        artistID:
          type: integer
          description: 絵師のID
          example: 1
        contributors:
          description: 絵師情報を登録したユーザーのID
          type: array
          items:
            $ref: '#/components/schemas/LightAccountStruct'
        name:
          type: array
          description: 絵師の名前(ペンネーム正式名)
          example:
            - 彩電
          items:
            type: string
            example: 彩電
        description:
          type: string
          example: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
          description: 絵師を説明する文章(1行分)
        group:
          example:
            - こねこぼたん
          description: サークル名
          type: array
          items:
            type: string
            example: こねこぼたん
        pixivID:
          type: array
          description: PixivのユーザーID(数字)
          items:
            type: integer
            example: 40436
        twitterID:
          type: array
          description: Twitterの表示ID(英数字+)
          items:
            type: string
            example: harufcs
        mastodon:
          type: array
          description: マストドンアカウントのURL
          items:
            type: string
            example: 'https://pawoo.net/@saiden'
            format: uri-reference
        homepage:
          description: HPのURL
          type: array
          items:
            type: string
            example: 'http://konebota.x0.com/PAGE/'
            format: uri-reference
        count:
          type: integer
          description: 絵師に属する作品数
          minimum: 0
          example: 1
          default: 0
        lcount:
          type: integer
          description: 絵師に属するいいね数
          example: 1204
          default: 0
          minimum: 0
    PostReplaceArtRequest:
      title: PostReplaceArtRequest
      type: object
      description: ''
      properties:
        artID:
          type: integer
          description: より画質が高いイラストのID
          minimum: 1
          example: 2
      required:
        - artID
      x-examples:
        example:
          artID: 2
    PostReplaceArtSimulateResponse:
      description: ''
      type: object
      x-examples:
        example:
          to:
            artID: 1
            title: 魔法少女は深淵になにをみるか？
            caption: Ｃ８９の新刊表紙となっていますっ
            datetime: '2015-12-27T07:29:00Z'
            page: 1
            likes: 1204
            views: 0
            mylists: 0
            mylisted: false
            uploader:
              accountID: 1
              name: お窓
            artists:
              - artistID: 1
                name: 彩電
            contributors:
              - accountID: 1
                name: お窓
            approvers:
              - accountID: 1
                name: お窓
            originUrl: 'https://www.pixiv.net/artworks/54265978'
            originService: Pixiv
            nsfw: false
            status: public
            replaces:
              - artID: 2
                title: チノちゃん
                caption: ''
                date: '2021-03-05 01:27:22'
                originService: Pixiv
                originUrl: 'https://www.pixiv.net/artworks/88062684'
                width: 750
                height: 1200
                filesize: 2M
            tags:
              copyrights:
                - tagID: 1
                  name: ご注文はうさぎですか?
                  nsfw: false
              characters:
                - tagID: 2
                  name: 香風智乃
                  nsfw: false
              generals:
                - tagID: 3
                  name: ロリ
                  nsfw: false
              metas:
                - tagID: 4
                  name: FHD
                  nsfw: false
            detailedLikes:
              yellow: 1204
              green: 0
              red: 0
              blue: 0
            file:
              original:
                width: 1200
                height: 1569
                size: 1385794
                extension: png
                pHash: e5d2de31c62dd320
                sha256: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
              ipfsHash:
                thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                small: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                large: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                info: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
          from:
            artID: 1
            title: 魔法少女は深淵になにをみるか？
            caption: Ｃ８９の新刊表紙となっていますっ
            datetime: '2015-12-27T07:29:00Z'
            page: 1
            likes: 0
            views: 0
            mylists: 0
            mylisted: false
            uploader:
              accountID: 1
              name: お窓
            artists:
              - artistID: 1
                name: 彩電
            contributors:
              - accountID: 1
                name: お窓
            approvers:
              - accountID: 1
                name: お窓
            originUrl: 'https://www.pixiv.net/artworks/54265978'
            originService: Pixiv
            nsfw: false
            status: public
            replaces: []
            tags:
              copyrights:
                - tagID: 1
                  name: ご注文はうさぎですか?
                  nsfw: false
              characters:
                - tagID: 2
                  name: 香風智乃
                  nsfw: false
              generals:
                - tagID: 3
                  name: ロリ
                  nsfw: false
              metas:
                - tagID: 4
                  name: FHD
                  nsfw: false
            detailedLikes:
              yellow: 0
              green: 0
              red: 0
              blue: 0
            file:
              original:
                width: 1200
                height: 1569
                size: 1385794
                extension: png
                pHash: e5d2de31c62dd320
                sha256: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
              ipfsHash:
                thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                small: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                large: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                info: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
      title: PostReplaceArtSimulateResponse
      properties:
        to:
          $ref: '#/components/schemas/ArtStruct'
        from:
          $ref: '#/components/schemas/ArtStruct'
      required:
        - to
        - from
    GetArtTagsResponse:
      title: GetArtTagsResponse
      type: object
      x-examples:
        example:
          tags:
            copyrights:
              - tagID: 1
                name: ご注文はうさぎですか?
                nsfw: false
            characters:
              - tagID: 2
                name: 香風智乃
                nsfw: false
            generals:
              - tagID: 3
                name: ロリ
                nsfw: false
            metas:
              - tagID: 4
                name: FHD
                nsfw: false
      properties:
        tags:
          type: object
          description: タグ情報
          properties:
            copyrights:
              type: array
              description: 出典タグ
              items:
                $ref: '#/components/schemas/TagStruct'
            characters:
              type: array
              description: キャラクタータグ
              items:
                $ref: '#/components/schemas/TagStruct'
            generals:
              type: array
              description: 一般タグ
              items:
                $ref: '#/components/schemas/TagStruct'
            metas:
              type: array
              description: システムタグ
              items:
                $ref: '#/components/schemas/TagStruct'
    PutArtTagsRequest:
      title: PutArtTagsRequest
      type: object
      x-examples:
        example-1:
          tagID:
            - 1
            - 2
            - 3
      properties:
        tagID:
          type: array
          description: 追加したいタグ一覧
          minItems: 1
          items:
            type: integer
      required:
        - tagID
    ArtDetailedLikesStruct:
      title: ArtDetailedLikesStruct
      type: object
      x-examples:
        example:
          yellow: 0
          green: 0
          red: 0
          blue: 0
      properties:
        yellow:
          type: integer
          example: 0
          default: 0
          minimum: 0
        green:
          type: integer
          minimum: 0
          default: 0
          example: 0
        red:
          type: integer
          minimum: 0
          example: 0
          default: 0
        blue:
          type: integer
          minimum: 0
          example: 0
          default: 0
      required:
        - yellow
        - green
        - red
        - blue
    GetArtLikesResponse:
      title: GetArtLikesResponse
      type: object
      x-examples:
        example:
          likes: 0
      properties:
        likes:
          type: integer
          description: 累計いいね数
          default: 0
          example: 0
          minimum: 0
    GetArtViewsResponse:
      title: GetArtViewsResponse
      type: object
      x-examples:
        example:
          views: 0
      properties:
        views:
          type: integer
          minimum: 0
          description: 累計閲覧数
          example: 0
          default: 0
    GetArtCommentsResponse:
      title: GetArtCommentsResponse
      type: object
      x-examples:
        success-no-data:
          comments: []
        success:
          comments:
            - commentID: 1
              created: '2021-03-13T11:29:24Z'
              updated: '2021-03-13T11:29:24Z'
              body: Hello world!
              author:
                accountID: 1
                name: お窓
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentStruct'
    CommentStruct:
      description: コメント型
      type: object
      x-examples:
        example:
          commentID: 1
          created: '2021-03-13T11:29:24Z'
          updated: '2021-03-13T11:29:24Z'
          body: Hello world!
          author:
            accountID: 1
            name: お窓
      title: CommentStruct
      properties:
        commentID:
          type: integer
          description: '"作品別" コメントID'
          minimum: 1
          format: int32
        created:
          type: string
          description: 投稿時刻(datetime)
          example: '2021-03-13T11:29:24Z'
          format: date-time
        updated:
          type: string
          description: 更新時刻(datetime)
          example: '2021-03-13T11:29:24Z'
          format: date-time
        body:
          type: string
          description: コメント本文
          maxLength: 500
          minLength: 1
          example: Hello world!
        author:
          $ref: '#/components/schemas/LightAccountStruct'
    GetCatalogArtistResponse:
      description: ''
      type: object
      x-examples:
        example:
          pagination:
            title: 絵師一覧
            type: artist
            count: 1
            current: 1
            pages: 1
            perPage: 20
          contents:
            - artistID: 1
              contributors:
                - accountID: 1
                  name: お窓
              name:
                - 彩電
              description: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
              group:
                - こねこぼたん
              pixivID:
                - 40436
              twitterID:
                - harufcs
              mastodon:
                - 'https://pawoo.net/@saiden'
              homepage:
                - 'http://konebota.x0.com/PAGE/'
              count: 1
              lcount: 1204
      title: GetCatalogArtistResponse
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ArtistStruct'
      required:
        - pagination
        - contents
    GetCatalogTagResponse:
      description: ''
      type: object
      x-examples:
        example:
          pagination:
            title: タグ一覧
            type: tag
            count: 4
            current: 1
            pages: 1
            perPage: 20
          contents:
            - tagID: 1
              type: copyright
              name: ご注文はうさぎですか?
              description: こころぴょんぴょんする漫画 from 芳文社
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
            - tagID: 2
              type: character
              name: 香風智乃
              description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
            - tagID: 3
              type: general
              name: ロリ
              description: 小さな女の子
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
            - tagID: 4
              type: meta
              name: FHD
              description: フルHD並の解像度がある画像
              nsfw: false
              issuer:
                accountID: 1
                name: お窓
              parent: []
              child: []
              count: 0
              lcount: 0
      title: GetCatalogTagResponse
      required:
        - pagination
        - contents
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/TagStruct'
    GetCatalogUploaderResponse:
      description: ''
      type: object
      x-examples:
        example:
          pagination:
            title: 投稿者一覧
            type: uploader
            count: 2
            current: 1
            pages: 1
            perPage: 20
          contents:
            - accountID: 1
              name: お窓
              count: 0
              lcount: 0
            - accountID: 2
              name: 香風智乃
              count: 0
              lcount: 0
      title: GetCatalogUploaderResponse
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/UploaderStruct'
      required:
        - pagination
        - contents
    UploaderStruct:
      title: UploaderStruct
      type: object
      description: 投稿者ユーザー型
      x-examples:
        example:
          accountID: 1
          name: お窓
          count: 1
          lcount: 1
      properties:
        accountID:
          type: integer
          minimum: 1
          example: 1
          description: ユーザーID
        name:
          type: string
          example: お窓
          minLength: 1
          maxLength: 40
          description: ユーザー名
        count:
          type: integer
          minimum: 0
          example: 1
          description: 投稿数
        lcount:
          type: integer
          minimum: 0
          example: 1
          description: 得たいいね数
      required:
        - accountID
        - name
        - count
        - lcount
    GetNavigationGeneralResponse:
      title: GetNavigationGeneralResponse
      type: object
      x-examples:
        example-copyright:
          navigations:
            - name: ご注文はうさぎですか?
              id: 1
              count: 1
        example-character:
          navigations:
            - name: 香風智乃
              id: 1
              count: 1
        example-general:
          navigations:
            - name: ロリ
              id: 1
              count: 1
        example-artist:
          navigations:
            - name: 彩電
              id: 1
              count: 1
        example-uploader:
          navigations:
            - name: お窓
              id: 1
              count: 1
      description: ''
      properties:
        navigations:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/NavigationStruct'
    GetNewsListResponse:
      title: GetNewsListResponse
      type: object
      x-examples:
        example:
          news:
            - newsID: 1
              date: '2021-03-22'
              color: 1
              title: Welcome to UsagiBooru!
              body: This is next generation imageboard. This is challenge for me. I hope someone loves this project.
              author:
                accountID: 1
                name: お窓
      description: ''
      properties:
        news:
          type: array
          items:
            $ref: '#/components/schemas/NewsStruct'
    GetSearchGeneralResponse:
      description: ''
      type: object
      title: GetSearchGeneralResponse
      x-examples:
        example:
          pagination:
            title: 香風智乃
            type: art
            count: 1
            current: 1
            pages: 1
            perPage: 20
          contents:
            - artID: 1
              title: 魔法少女は深淵になにをみるか？
              caption: Ｃ８９の新刊表紙となっていますっ
              datetime: '2015-12-27T07:29:00Z'
              page: 1
              likes: 0
              views: 0
              mylists: 0
              mylisted: false
              uploader:
                accountID: 1
                name: お窓
              artists:
                - artistID: 1
                  name: 彩電
              originUrl: 'https://www.pixiv.net/artworks/54265978'
              originService: Pixiv
              nsfw: false
              file:
                ipfsHash:
                  thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              similarity: 0
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/LightArtStruct'
    GetMylistListResponse:
      description: ''
      type: object
      title: GetMylistListResponse
      x-examples:
        example:
          pagination:
            title: マイリスト一覧
            type: mylist
            count: 1
            current: 1
            pages: 1
            perPage: 20
          contents:
            - mylistID: 1
              name: お窓のマイリスト
              description: string
              createdDate: '2021-03-14T02:16:03Z'
              updatedDate: '2021-03-14T02:16:03Z'
              private: true
              arts:
                - artID: 1
                  title: 魔法少女は深淵になにをみるか？
                  caption: Ｃ８９の新刊表紙となっていますっ
                  datetime: '2015-12-27T07:29:00Z'
                  page: 1
                  likes: 0
                  views: 0
                  mylists: 0
                  mylisted: false
                  uploader:
                    accountID: 1
                    name: お窓
                  artists:
                    - artistID: 1
                      name: 彩電
                  originUrl: 'https://www.pixiv.net/artworks/54265978'
                  originService: Pixiv
                  nsfw: false
                  file:
                    ipfsHash:
                      thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                      orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  similarity: 0
              owner:
                accountID: 1
                name: お窓
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        contents:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/MylistStruct'
      required:
        - pagination
        - contents
    PostSearchByImageRequest:
      title: PostSearchByImageRequest
      type: object
      properties:
        file:
          type: string
          format: binary
          description: 画像ファイル(binary)
      required:
        - file
    PostSearchByImageResponse:
      title: PostSearchByImageResponse
      type: object
      x-examples:
        example-1:
          hash: string
          illusts:
            - artID: 1
              title: 魔法少女は深淵になにをみるか？
              caption: Ｃ８９の新刊表紙となっていますっ
              datetime: '2015-12-27T07:29:00Z'
              page: 1
              likes: 0
              views: 0
              mylists: 0
              mylisted: false
              uploader:
                accountID: 1
                name: お窓
              artists:
                - artistID: 1
                  name: 彩電
              originUrl: 'https://www.pixiv.net/artworks/54265978'
              originService: Pixiv
              nsfw: false
              file:
                ipfsHash:
                  thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              similarity: 0
      properties:
        hash:
          type: string
          example: DUMMY_IMAGE_HASH
          minLength: 1
          maxLength: 100
        illusts:
          type: array
          items:
            $ref: '#/components/schemas/LightArtStruct'
      required:
        - hash
        - illusts
    PostSearchByImageAtSauceNaoResponse:
      description: ''
      type: object
      x-examples:
        example-1:
          result:
            - header:
                similarity: '77.83'
                thumbnail: 'https://img3.saucenao.com/booru/3/a/3ab0ed13bd3ec3a8622382a240db3b74_1.jpg?auth=Tu4qnVHPxVwiXxVzMoJhWw&exp=1615921200'
                index_id: 12
                index_name: 'Index #12: Yande.re - 3ab0ed13bd3ec3a8622382a240db3b74_1.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://yande.re/post/show/647138'
                yandere_id: 647138
                creator: azumi kazuki
                material: ''
                characters: ''
                source: '(C98) [Come Through (Adumi Kazuki)] Honey Sweet'
            - header:
                similarity: '95.17'
                thumbnail: 'https://img3.saucenao.com/booru/b/c/bca7ec8627098a725c1ec1c33effc352_0.jpg?auth=r3KiiJle_Y6fdX2Bhh268Q&exp=1615921200'
                index_id: 9
                index_name: 'Index #9: Danbooru - bca7ec8627098a725c1ec1c33effc352_0.jpg'
                dupes: 1
              data:
                ext_urls:
                  - 'https://danbooru.donmai.us/post/show/3890236'
                  - 'https://gelbooru.com/index.php?page=post&s=view&id=5273065'
                danbooru_id: 3890236
                gelbooru_id: 5273065
                creator: azumi kazuki
                material: 'clockwork rabbit, gochuumon wa usagi desu ka?'
                characters: 'kafuu chino, tippy (gochiusa)'
                source: 'https://twitter.com/kazukiadumi/status/1256528892409470976'
            - header:
                similarity: '77.99'
                thumbnail: 'https://img3.saucenao.com/ehentai/35/5a/355a28ea90722d3152d2b77da5ad73160ca7f41c.jpg?auth=oewNFWX4UIC3tRM2Z3m2lQ&exp=1615921200'
                index_id: 38
                index_name: 'Index #38: H-Misc (E-Hentai) - 355a28ea90722d3152d2b77da5ad73160ca7f41c.jpg'
                dupes: 1
              data:
                source: Honey Sweet
                creator:
                  - adumi kazuki
                  - come through
                eng_name: '[Come Through (Adumi Kazuki)] Honey Sweet'
                jp_name: '[Come Through (あづみ一樹)] Honey Sweet'
            - header:
                similarity: '51.24'
                thumbnail: 'https://img1.saucenao.com/res/pixiv/8571/manga/85711213_p2.jpg?auth=8Acmlg43E4OKbzO1ulq-nw&exp=1615921200'
                index_id: 5
                index_name: 'Index #5: Pixiv Images - 85711213_p2.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://www.pixiv.net/member_illust.php?mode=medium&illust_id=85711213'
                title: まとめ
                pixiv_id: 85711213
                member_name: みずみず子
                member_id: 7955474
            - header:
                similarity: '50.74'
                thumbnail: 'https://img1.saucenao.com/res/nhentai/32697%20%28142225%29%20--%20%5BHirose%20Miho%5D%20Oneesan%20to%20Issho/119.jpg?auth=ez1hhJY60BbS-3Ge7xl4CQ&exp=1615921200'
                index_id: 18
                index_name: 'Index #18: H-Misc (nhentai) - 119.jpg'
                dupes: 1
              data:
                source: Oneesan to Issho
                creator:
                  - hidiri rei
                  - hirose miho
                eng_name: '[Hirose Miho] Oneesan to Issho'
                jp_name: '[ひろせみほ] おねえさんといっしょ'
            - header:
                similarity: '50.6'
                thumbnail: 'https://img3.saucenao.com/furaffinity/1336/13361739.jpg?auth=QGLqamng93PFvd-UPObysw&exp=1615921200'
                index_id: 40
                index_name: 'Index #40: FurAffinity - 13361739.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://www.furaffinity.net/view/13361739'
                title: Nurse Aras to the Rescue
                fa_id: 13361739
                author_name: KuroiNekoMiko
                author_url: 'https://www.furaffinity.net/user/kuroinekomiko'
            - header:
                similarity: '50.48'
                thumbnail: 'https://img1.saucenao.com/res/mangadex/824/824357/R15.jpg?auth=RFr2ldvSaiFIIxiII821-A&exp=1615921200'
                index_id: 37
                index_name: 'Index #37: MangaDex - R15.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://mangadex.org/chapter/824357/'
                  - 'https://www.mangaupdates.com/series.html?id=371'
                  - 'https://myanimelist.net/manga/1439/'
                md_id: 824357
                mu_id: 371
                mal_id: 1439
                source: Sex Pistols
                part: ' - Chapter 30'
                artist: KOTOBUKI Tarako
                author: KOTOBUKI Tarako
            - header:
                similarity: '50.2'
                thumbnail: 'https://img1.saucenao.com/res/pixiv/7858/manga/78582114_p9.jpg?auth=NxnkYsm8LdvXpgqcC08qbQ&exp=1615921200'
                index_id: 5
                index_name: 'Index #5: Pixiv Images - 78582114_p9.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://www.pixiv.net/member_illust.php?mode=medium&illust_id=78582114'
                title: 期間限定Web投稿（12/31まで）
                pixiv_id: 78582114
                member_name: 長谷川
                member_id: 7961579
            - header:
                similarity: '49.70'
                thumbnail: 'https://img1.saucenao.com/res/pixiv/2030/manga/20309973_p2.jpg?auth=goBwjyvoTMaPAvGy3KNmqQ&exp=1615921200'
                index_id: 5
                index_name: 'Index #5: Pixiv Images - 20309973_p2.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://www.pixiv.net/member_illust.php?mode=medium&illust_id=20309973'
                title: 忍者じゃなイカ？　～多勢に無勢～
                pixiv_id: 20309973
                member_name: shen
                member_id: 1172007
            - header:
                similarity: '49.68'
                thumbnail: 'https://img1.saucenao.com/res/pixiv/5400/manga/54003307_p5.jpg?auth=eBHYI20wET5PE8fNw8ftPw&exp=1615921200'
                index_id: 5
                index_name: 'Index #5: Pixiv Images - 54003307_p5.jpg'
                dupes: 0
              data:
                ext_urls:
                  - 'https://www.pixiv.net/member_illust.php?mode=medium&illust_id=54003307'
                title: 出轟+αまとめ3/再販のお知らせ
                pixiv_id: 54003307
                member_name: くろい
                member_id: 3807881
      title: PostSearchByImageAtSauceNaoResponse
      properties:
        result:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              header:
                type: object
                properties:
                  similarity:
                    type: string
                    minLength: 1
                    description: 類似度(100.00~0.00までのfloatを文字列にしたもの)
                  thumbnail:
                    type: string
                    minLength: 1
                    description: サムネイル画像(直アクセス可能)
                  index_id:
                    type: integer
                    description: 参照したデータベースID
                  index_name:
                    type: string
                    minLength: 1
                    description: 参照したデータベース名
                  dupes:
                    type: integer
                    description: 不明
                required:
                  - similarity
                  - thumbnail
                  - index_id
                  - index_name
                  - dupes
              data:
                type: object
                description: 参照したDBによる異なる追加データ
                properties:
                  ext_urls:
                    type: array
                    description: 出典URL(出せる場合)
                    items:
                      type: object
                  yandere_id:
                    type: integer
                  creator:
                    type: string
                    minLength: 1
                  material:
                    type: string
                  characters:
                    type: string
                  source:
                    type: string
                    minLength: 1
            required:
              - data
    GetMutesResponse:
      title: GetMutesResponse
      type: object
      x-examples:
        example:
          tags:
            - muteID: 1
              targetType: tag
              targetID: 1
          artists: []
      properties:
        tags:
          type: array
          description: ミュート中のタグID配列
          items:
            $ref: '#/components/schemas/MuteStruct'
        artists:
          type: array
          description: ミュート中の絵師ID配列
          items:
            $ref: '#/components/schemas/MuteStruct'
      required:
        - tags
        - artists
    MylistStruct:
      title: MylistStruct
      type: object
      x-examples:
        example:
          mylistID: 1
          name: お窓のマイリスト
          description: ユーザーデフォルトマイリスト
          createdDate: '2021-03-14T02:16:03Z'
          updatedDate: '2021-03-14T02:16:03Z'
          private: true
          arts:
            - artID: 0
              title: string
              caption: string
              datetime: '2021-01-07 12:48:42'
              page: 0
              likes: 0
              views: 0
              mylists: 0
              mylisted: true
              uploader:
                accountID: 1
                name: お窓
              artists:
                - artistID: 1
                  name: 彩電
              originUrl: string
              originService: string
              nsfw: true
              file:
                ipfsHash:
                  thumb: string
                  orig: string
              similarity: 0
          owner:
            accountID: 1
            name: お窓
      properties:
        mylistID:
          type: integer
          description: マイリストID
          example: 1
          minimum: 1
        name:
          type: string
          description: マイリスト名
          minLength: 1
          example: お窓のマイリスト
        description:
          type: string
          description: マイリスト説明文
          example: ユーザーデフォルトマイリスト
        createdDate:
          type: string
          description: マイリスト作成日時
          format: date-time
          example: '2021-03-14T02:16:03Z'
        updatedDate:
          type: string
          description: マイリスト更新日時
          format: date-time
          example: '2021-03-14T02:16:03Z'
        private:
          type: boolean
          description: 公開/非公開
          default: true
        arts:
          type: array
          description: イラストID一覧
          items:
            $ref: '#/components/schemas/LightArtStruct'
        owner:
          $ref: '#/components/schemas/LightAccountStruct'
    PostMylistFindsRequest:
      title: PostMylistFindsRequest
      type: object
      properties:
        id:
          description: 探したいイラストID
          type: array
          items:
            type: integer
      x-examples:
        example:
          id:
            - 1
            - 2
            - 3
    PostMylistFindsResponse:
      title: PostMylistFindsResponse
      type: object
      x-examples:
        success:
          data:
            '1': true
            '2': false
            '3': true
      properties:
        data:
          type: object
          additionalProperties:
            type: string
            description: 指定されたイラストIDをキーとして、それぞれ存在するかのboolean
    GetNotifyClientsResponse:
      title: GetNotifyClientsResponse
      type: object
      x-examples:
        example:
          clients:
            - notifyClientID: 1
              name: ChinoPhone
              type: webpush
              level: 5
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/NotifyClientStruct'
    NotifyClientStruct:
      title: NotifyClientStruct
      type: object
      description: ''
      x-examples:
        example:
          notifyClientID: 1
          name: ChinoPhone
          type: webpush
          level: 5
      properties:
        notifyClientID:
          type: integer
          description: 通知クライアントID
          minimum: 1
          example: 1
        name:
          type: string
          description: ユーザーが指定した通知クライアント名
          minLength: 1
          example: ChinoPhone
          maxLength: 30
        type:
          type: string
          description: クライアント種別
          enum:
            - webpush
            - linenotify
          example: webpush
          default: webpush
          minLength: 1
          maxLength: 20
        level:
          type: integer
          minimum: 1
          maximum: 9
          description: '通知レベル 1:緊急時のみ 5:タグ絵師通知のみ 9:すべて'
          enum:
            - 1
            - 5
            - 9
          example: 5
          default: 5
          format: int32
    PostRegisterWebPushRequest:
      title: PostRegisterWebPushRequest
      type: object
      x-examples:
        example:
          endpoint: 'https://example.com/webpush/endpoint'
          p256dh: DUMMY_PUBLIC_KEY
          auth: DUMMY_AUTH_TOKEN
          name: ChinoLaptop
          level: 5
      properties:
        endpoint:
          type: string
          description: WebPushのPOST先エンドポイント(ユーザー毎に異なる)
          format: uri-reference
          minLength: 1
          maxLength: 200
          example: 'https://example.com/webpush/endpoint'
        p256dh:
          type: string
          description: ブラウザ公開鍵
          minLength: 10
          maxLength: 200
          example: DUMMY_PUBLIC_KEY
        auth:
          type: string
          description: WebPushの通知送信認証キー
          minLength: 10
          maxLength: 200
          example: DUMMY_AUTH_TOKEN
        name:
          type: string
          description: 通知クライアント名
          example: ChinoLaptop
          minLength: 1
          maxLength: 30
        level:
          type: integer
          description: '通知レベル 1:緊急時のみ 5:タグ絵師通知のみ 9:すべて'
          enum:
            - 1
            - 5
            - 9
          example: 5
          default: 5
          format: int32
          minimum: 1
          maximum: 9
      required:
        - endpoint
        - p256dh
        - auth
        - name
        - level
    PostRegisterLineNotifyRequest:
      title: PostRegisterLineNotifyRequest
      type: object
      x-examples:
        example:
          token: DUMMY_LINE_NOTIFY_TOKEN_BEARER
          name: 1対1で受け取る
          level: 5
      properties:
        token:
          type: string
          description: LineNotifyのパーソナルトークン
          example: DUMMY_LINE_NOTIFY_TOKEN_BEARER
          minLength: 30
          maxLength: 120
        name:
          type: string
          description: 通知クライアント名
          example: 1対1で受け取る
        level:
          type: integer
          description: '通知レベル 1:緊急時のみ 5:タグ絵師通知のみ 9:すべて'
          enum:
            - 1
            - 5
            - 9
          example: 5
          default: 5
          minimum: 1
          maximum: 9
          format: int32
      required:
        - token
        - name
        - level
    GetNotifyConditionsResponse:
      title: GetNotifyConditionsResponse
      type: object
      x-examples:
        example:
          pagination:
            title: 通知条件一覧
            type: notify-condition
            count: 1
            current: 1
            pages: 1
            perPage: 20
          conditions:
            - notifyConditionID: 1
              targetType: tag
              targetID: 1
              targetMethod: all
              targetClient: -1
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/NotifyConditionStruct'
    NotifyConditionStruct:
      title: NotifyConditionStruct
      type: object
      x-examples:
        example:
          notifyConditionID: 1
          targetType: tag
          targetID: 1
          targetMethod: all
          targetClient: -1
      properties:
        notifyConditionID:
          type: integer
          description: NotifyConditionID
          minimum: 1
          example: 1
        targetType:
          type: string
          description: 条件種別
          enum:
            - all
            - tag
            - artist
          example: tag
          default: tag
          minLength: 1
          maxLength: 10
        targetID:
          type: integer
          description: 条件ID 全通知なら0/タグID/絵師ID
          example: 1
          default: 0
          minimum: 0
        targetMethod:
          type: string
          description: 通知方法
          enum:
            - all
            - webpush
            - linenotify
          example: all
          default: all
          minLength: 1
          maxLength: 30
        targetClient:
          type: integer
          minimum: -1
          default: -1
          example: -1
          format: int32
          description: 対象の通知クライアント(ターゲットが全てなら-1)
    PostReportGeneralRequest:
      title: ReportGeneralRequest
      type: object
      x-examples:
        example-1:
          type: bad-name
          msg: XSSしようとしてる人が居るみたいです、なんとかしてください
        example-2:
          type: wrong-info
          msg: どうみてもエッチですあーいけません!
        example-3:
          type: violation-rules
          msg: 完全に同一の画像を上げ続け、運営を妨害している人が居ます
        example-4:
          type: dmca
          msg: DMCA Request
      properties:
        type:
          type: string
          description: '通報種別 1:不適切名称 2:不適切年齢 3:規約違反 4:法律違反'
          enum:
            - bad-name
            - wrong-info
            - violation-rules
            - dmca
          example: bad-name
          default: bad-name
        msg:
          type: string
          description: 通報本文
          minLength: 1
      required:
        - type
        - msg
    ScrapeResultStruct:
      title: ScrapeResultStruct
      type: object
      description: スクレイピング結果
      x-examples:
        twitter:
          illust:
            type: twitter
            id: 1368965591470547000
            title: 'ラ〇ッドハウスの店員さん '
            caption: 'ラ〇ッドハウスの店員さん '
            imgs:
              - width: 1159
                height: 1577
                large_src: 'https://pbs.twimg.com/media/Ev-K11BVoAktP3d.jpg?format=jpg&name=orig'
                thumb_src: 'https://pbs.twimg.com/media/Ev-K11BVoAktP3d.jpg?format=jpg&name=thumb'
            tags: []
            source: 'https://twitter.com/PURA1192/status/1368965591470546949'
            artist: きゅーぷら
            R18: false
          extra:
            twitter_user:
              id: 1176867370238800000
              screen_name: PURA1192
              name: きゅーぷら
              description: |-
                オメガウェポン

                https://t.co/sffwGeETPk
              profile_image: 'https://pbs.twimg.com/profile_images/1362206358922092549/uWD9eZId_normal.jpg'
              banner_image: 'https://pbs.twimg.com/profile_banners/1176867370238799872/1611142275'
      properties:
        illust:
          type: object
          description: 投稿に必須となるデータ
          properties:
            type:
              type: string
              description: スクレイプ元のサイト名(英語で短く表現)
            id:
              description: 外部サイト内でのイラストID
              type: integer
            title:
              type: string
              description: 作品タイトル
            caption:
              type: string
              description: 作品説明文
            imgs:
              type: array
              items:
                type: object
                properties:
                  width:
                    description: 画像の横幅(取得できる場合)
                    type: integer
                  height:
                    type: integer
                    description: 縦幅(取得できる場合)
                  large_src:
                    type: string
                    description: 実際に保存される画像へのURL(取得できる場合)
                    format: uri-reference
                    example: 'https://example.com/hoge'
                  thumb_src:
                    type: string
                    description: サムネイル画像へのURL
                required:
                  - thumb_src
            tags:
              type: array
              description: 取得したサイト内で指定されていたタグ
              items:
                type: string
            source:
              type: string
              description: 取得したURLの正規URL
            artist:
              description: 絵師の名前
              type: object
              required:
                - source
                - name
                - id
              properties:
                source:
                  type: string
                  description: 絵師ページへの直URL
                name:
                  type: string
                  description: 絵師の名前
                id:
                  type: string
                  description: 絵師のID
            R18:
              type: boolean
              description: アダルトコンテンツか否か
          required:
            - type
            - id
            - title
            - caption
            - imgs
            - tags
            - source
            - artist
            - R18
        extra:
          type: object
          description: 投稿に必須ではない追加データ(他で再利用できるように)
          properties:
            booth_shop:
              type: object
              description: Boothのショップ型
              properties:
                name:
                  type: string
                link:
                  type: string
            twitter_user:
              type: object
              description: Twitterのユーザー型
              properties:
                id:
                  type: integer
                screen_name:
                  type: string
                name:
                  type: string
                description:
                  type: string
                profile_image:
                  type: string
                banner_image:
                  type: string
            danbooru_user:
              type: object
              description: Danbooruのユーザー型
              properties:
                id:
                  type: integer
                  description: ユーザーID
                name:
                  type: string
                  description: ユーザー名
            pixiv_user:
              type: object
              description: Pixivのユーザー型
              properties:
                id:
                  type: integer
                  description: ユーザーID(整数値)
                name:
                  type: string
                  description: ユーザー名
                description:
                  type: string
                  description: 説明文
                profile_image:
                  type: string
                  description: アバター画像
                banner_image:
                  type: string
                  description: バナー画像
            nicoseiga_user:
              type: object
              description: ニコニコ静画のユーザー型
              properties:
                id:
                  type: integer
                  description: ユーザーID
                name:
                  type: string
                  description: ユーザー名
                profile_image:
                  type: string
                  description: プロフィール画像
    PostScrapeRequest:
      title: PostScrapeRequest
      type: object
      x-examples:
        twitter:
          url: 'https://twitter.com/mozukun43/status/1369660632409153537'
        pixiv:
          url: 'https://www.pixiv.net/artworks/87348005'
        danbooru:
          url: 'https://danbooru.donmai.us/posts/4359777'
        nicoseiga:
          url: 'https://seiga.nicovideo.jp/seiga/im10677929'
        booth:
          url: 'https://booth.pm/ja/items/2500039'
        booth2:
          url: 'https://picupdoll.booth.pm/items/2500039'
      properties:
        url:
          type: string
          description: スクレイピングするURL
          example: 'https://twitter.com/mozukun43/status/1369660632409153537'
          format: uri-reference
          minLength: 1
          maxLength: 500
      required:
        - url
    PostScrapeResponse:
      title: PostScrapeResponse
      type: object
      x-examples:
        success-twitter:
          result:
            illust:
              type: twitter
              id: 1369660632409153500
              title: 不機嫌チノちゃん
              caption: 不機嫌チノちゃん
              imgs:
                - width: 965
                  height: 1160
                  large_src: 'https://pbs.twimg.com/media/EwIDEmRXIAEHEju?format=jpg&name=orig'
                  thumb_src: 'https://pbs.twimg.com/media/EwIDEmRXIAEHEju?format=jpg&name=thumb'
              tags:
                - ごちうさ
              source: 'https://twitter.com/mozukun43/status/1369660632409153537'
              artist:
                name: もくず
                id: mozukun43
                source: 'https://twitter.com/mozukun43'
              R18: true
            extra:
              twitter_user:
                id: 0
                screen_name: mozukun43
                name: もくず
                description: 'ジャンル雑多(ごちうさ多め)。本業も趣味も絵を描いて生きています。アルバカレーに生かされてます。旅客機が好きです。女の子と食べ物を描くことが多いです。だいたい健全。返信はのんびり 2/14〜体調不良でちょっと更新頻度低めです fanbox▷http://mozukun43.fanbox.cc'
                profile_image: 'https://pbs.twimg.com/profile_images/1314875319791177728/HZtotQN-_400x400.jpg'
                banner_image: 'https://pbs.twimg.com/profile_banners/1018545218776207361/1603160166/1500x500'
        success-pixiv:
          result:
            illust:
              type: pixiv
              id: 87348005
              title: "チノ「もぅ\U0001F495・・・見ないでください///・・」"
              caption: ''
              imgs:
                - width: 900
                  height: 1432
                  large_src: 'https://i.pximg.net/img-original/img/2021/01/28/00/02/31/87348005_p0.jpg'
                  thumb_src: 'https://api.gochiusa.team/temp/hoge.jpg'
              tags:
                - 香風智乃
                - パンチラ
                - 風チラ
                - セーラー服
              source: 'https://www.pixiv.net/artworks/87348005'
              artist:
                name: くまふり
                id: '62583422'
                source: 'https://www.pixiv.net/users/62583422'
              R18: false
            extra:
              pixiv_user:
                id: 62583422
                name: くまふり
                description: えっちな絵を中心に投稿していきます
                profile_image: 'https://i.pximg.net/user-profile/img/2020/12/12/22/23/41/19820326_fb09523b351d514c7ec4e7ae819e5502_170.jpg'
                banner_image: ''
        success-danbooru:
          result:
            illust:
              type: danbooru
              id: 4359777
              title: YESチョコくわえちゃうチノちゃん
              caption: 誰かさんに言われるがまま咥えてみたけど、意味分かってないチノちゃんのらくがき
              imgs:
                - width: 599
                  height: 687
                  large_src: 'https://danbooru.donmai.us/data/__kafuu_chino_gochuumon_wa_usagi_desu_ka_drawn_by_araki495__c12cdf2a0cbec190e15b64620caaffa6.png?download=1'
                  thumb_src: 'https://cdn.donmai.us/preview/c1/2c/c12cdf2a0cbec190e15b64620caaffa6.jpg'
              tags:
                - 1girl
                - '??'
                - araki495
                - bangs
                - blue_bow
                - blue_eyes
                - blue_hair
                - blue_vest
                - blush
                - bow
                - candy
                - chocolate
                - chocolate_heart
                - closed_mouth
                - collared_shirt
                - commentary_request
                - dress_shirt
                - eyebrows_visible_through_hair
                - food
                - food_in_mouth
                - gochuumon_wa_usagi_desu_ka?
                - hair_between_eyes
                - hair_ornament
                - hands_up
                - heart
                - holding
                - holding_food
                - kafuu_chino
                - long_hair
                - looking_at_viewer
                - puffy_short_sleeves
                - puffy_sleeves
                - rabbit_house_uniform
                - shirt
                - short_sleeves
                - solo
                - translated
                - uniform
                - upper_body
                - vest
                - waitress
                - white_shirt
                - x_hair_ornament
                - 'yes'
              source: 'https://danbooru.donmai.us/posts/4359777'
              artist:
                name: araki495
                id: araki495
                source: 'https://danbooru.donmai.us/posts?tags=araki495'
              R18: false
            extra:
              danbooru_user:
                id: 430030
                name: Unbreakable
        success-nicoseiga:
          result:
            illust:
              type: nicoseiga
              id: 10677929
              title: ナースチノちゃん
              caption: ''
              imgs:
                - width: 1750
                  height: 1684
                  large_src: 'https://lohas.nicoseiga.jp/priv/a9db9d0eb330004b69875ed94dcc3db96fadb6a0/1615764084/10677929'
                  thumb_src: 'https://lohas.nicoseiga.jp//thumb/10677929uz?1610798673'
              tags:
                - アニメ
                - ご注文はうさぎですか?
                - 香風智乃
              source: 'https://seiga.nicovideo.jp/seiga/im10677929'
              artist:
                name: Azel司令官
                id: '12038745'
                source: 'https://seiga.nicovideo.jp/user/illust/12038745'
              R18: false
            extra:
              nicoseiga_user:
                id: 12038745
                name: Azel司令官
                profile_image: 'https://secure-dcdn.cdn.nimg.jp/nicoaccount/usericon/1203/12038745.jpg?1572444258'
        success-booth:
          result:
            illust:
              type: booth
              id: 2500039
              title: 'Pic Up Doll 33 Level:★★★★☆'
              caption: |-
                Pic Up Dollはペーパークラフト組立キットです 、差し込み式で設計、接着剤などは使用していません。お部屋の机や会社のデスクにちょこんと置くのも かわいいです、カメラやスマートフォンで撮影して楽しんでいただければと思います。また、大切な人へ の贈り物としてもオススメしています。サイズが小さいためパーツが小さくて、小さな子ども向けではな いようです。

                Level:★☆☆☆☆
                初級者にとって取り組みやすいグレードで、パーツも少なめです。

                Level:★★☆☆☆
                形の似ている部品や小さな部品が含まれているので注意してください。

                Level:★★★☆☆
                組み立てには時間を要するかもしれません。

                Level:★★★★☆
                細かさもパーツ数もハ イレベル、組み立ての難易度は5つ星に近いです。

                Level:★★★★★
                組み立ては非常に難しく、お手入れと忍耐が必要です。

                製作の所要時間は個人差があります、ゆっくりと丁寧に楽しみながら作って ください。工具の使い方やコツを知っておくだけで、Pic Up Dollの組み立てはぐっと楽になります。

                ※ 二次創作の元になっているキャラクターデザインや設定などの著作権は、原作者・版権元にあります。
              imgs:
                - width: 3001
                  height: 3000
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/dbb72dbe-3f16-4086-a354-94bfd2462dee.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/dbb72dbe-3f16-4086-a354-94bfd2462dee_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/13d31dc9-d7eb-4a42-9d92-5d7b16652f34.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/13d31dc9-d7eb-4a42-9d92-5d7b16652f34_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/ab6ae45f-ced8-4fb5-bc74-4d8d88284823.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/ab6ae45f-ced8-4fb5-bc74-4d8d88284823_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/e0837269-f593-4d24-b6f7-353da119e581.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/e0837269-f593-4d24-b6f7-353da119e581_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/94526010-c5d2-4ede-98d8-8abeed9e0165.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/94526010-c5d2-4ede-98d8-8abeed9e0165_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/abfafead-b6ad-4947-9d85-31b3894340d9.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/abfafead-b6ad-4947-9d85-31b3894340d9_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/fe2eaa2a-3da9-49a9-8230-a75e67650a67.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/fe2eaa2a-3da9-49a9-8230-a75e67650a67_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/dcd8f43b-77ee-475f-a7e0-46d1c8364aff.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/dcd8f43b-77ee-475f-a7e0-46d1c8364aff_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/18217e23-0ea8-43d0-8b5a-01783143d3d0.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/18217e23-0ea8-43d0-8b5a-01783143d3d0_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/20407936-3496-4db9-b693-bde929fc35c8.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/20407936-3496-4db9-b693-bde929fc35c8_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/2a51cd57-c485-42c0-b22a-76a5dc3e5ce0.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/2a51cd57-c485-42c0-b22a-76a5dc3e5ce0_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/3f13b558-1037-47f7-88fe-b70004437004.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/3f13b558-1037-47f7-88fe-b70004437004_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/aa66279a-f9e6-4664-b896-d944ab719ab6.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/aa66279a-f9e6-4664-b896-d944ab719ab6_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/e4d59aea-150e-4a87-be1d-dd08b14d3fed.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/e4d59aea-150e-4a87-be1d-dd08b14d3fed_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/598236b1-01d1-4b4f-8267-f036377b16d2.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/598236b1-01d1-4b4f-8267-f036377b16d2_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/4f4e31bb-3987-4316-b296-c606b4ba63fe.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/4f4e31bb-3987-4316-b296-c606b4ba63fe_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/cc054f57-a0e6-439a-8040-68592e17145d.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/cc054f57-a0e6-439a-8040-68592e17145d_base_resized.jpg'
                - width: 1080
                  height: 1080
                  large_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/c2c5259e-00d2-4b24-8e2a-d0f38cff58a0.jpg'
                  thumb_src: 'https://booth.pximg.net/5e7d554d-3111-4e62-9caa-5a2985236192/i/2500039/c2c5259e-00d2-4b24-8e2a-d0f38cff58a0_base_resized.jpg'
              tags:
                - ペーパークラフト
                - 香風智乃
                - ティッピー
                - おりがみ
                - ご注文はうさぎですか
                - ペーパートイ
              source: 'https://picupdoll.booth.pm/items/2500039'
              artist:
                name: Pic Up Doll
                id: picupdoll
                source: 'https://picupdoll.booth.pm/'
              R18: true
            extra:
              booth_shop:
                name: Pic Up Doll
                link: 'https://picupdoll.booth.pm'
                sns:
                  - 'https://www.pixiv.net/users/55242393'
                  - 'https://twitter.com/picupdoll/'
                  - 'https://www.instagram.com/PicUpDoll/'
                  - 'https://www.facebook.com/PicUpDoll'
      properties:
        result:
          $ref: '#/components/schemas/ScrapeResultStruct'
      required:
        - result
    PostUploadRequest:
      title: PostUploadRequest
      type: object
      description: ''
      properties:
        file:
          type: string
          description: 投稿するファイル本体
          format: binary
      required:
        - file
    PostUploadResponse:
      title: PostUploadResponse
      type: object
      x-examples:
        success:
          url: 'https://example.com/hogehoge.jpg'
      properties:
        url:
          description: 投稿したファイルのURL(有効期限は1時間とする)
          type: string
    PostSearchByImageAtAscii2dResponse:
      description: ''
      type: object
      x-examples:
        success:
          url: 'https://ascii2d.net/search/color/e7e09e7cb091cc31ae12a67661e391d5'
          result:
            - hash: 379bf76fe1aeff3c4aff68404d717e59
              size: 1146x2048 JPEG 245.3KB
              thumbnail: /thumbnail/3/7/9/b/379bf76fe1aeff3c4aff68404d717e59.jpg
              title: 2020.04.24
              artist: Pizzzica
              urls:
                source: 'https://twitter.com/Pizzzica/status/1253620903805505536'
                artist: 'https://twitter.com/intent/user?user_id=1099287362570350592'
            - hash: 15e8b2af81e8451fd6852170f428d0f1
              size: twitter
              thumbnail: /thumbnail/1/5/e/8/15e8b2af81e8451fd6852170f428d0f1.jpg
              title: リプラビチノちゃん
              artist: ぴちかー
              urls:
                source: 'https://www.pixiv.net/artworks/81029831'
                artist: 'https://www.pixiv.net/users/38405227'
            - hash: 379bf76fe1aeff3c4aff68404d717e59
              size: 1146x2048 JPEG 245.3KB
              thumbnail: /thumbnail/3/7/9/b/379bf76fe1aeff3c4aff68404d717e59.jpg
              title: 2020.04.24
              artist: Pizzzica
              urls:
                source: 'https://twitter.com/Pizzzica/status/1253620903805505536'
                artist: 'https://twitter.com/intent/user?user_id=1099287362570350592'
            - hash: 15e8b2af81e8451fd6852170f428d0f1
              size: twitter
              thumbnail: /thumbnail/1/5/e/8/15e8b2af81e8451fd6852170f428d0f1.jpg
              title: リプラビチノちゃん
              artist: ぴちかー
              urls:
                source: 'https://www.pixiv.net/artworks/81029831'
                artist: 'https://www.pixiv.net/users/38405227'
            - hash: d382dcb19944b9d712cdca81c65f1d10
              size: 1944x3505 PNG 4837.4KB
              thumbnail: /thumbnail/d/3/8/2/d382dcb19944b9d712cdca81c65f1d10.jpg
              title: 銀高（お蔵出し）Log　R-18
              artist: なゆ子
              urls:
                source: 'https://www.pixiv.net/artworks/55205947'
                artist: 'https://www.pixiv.net/users/3696997'
            - hash: b4ee05347efd6c8041ce0444ba335af5
              size: 481x836 JPEG 306.6KB
              thumbnail: /thumbnail/b/4/e/e/b4ee05347efd6c8041ce0444ba335af5.jpg
              title: 2018.12.09
              artist: askh559
              urls:
                source: 'https://twitter.com/askh559/status/1071684395239493633'
                artist: 'https://twitter.com/intent/user?user_id=3129658207'
            - hash: e65f8bca8ec2322363fc13924875b7eb
              size: 1944x3505 PNG 4837.4KB
              thumbnail: /thumbnail/e/6/5/f/e65f8bca8ec2322363fc13924875b7eb.jpg
              title: ★2011★
              artist: alica@サンこそS38
              urls:
                source: 'https://www.pixiv.net/artworks/15601359'
                artist: 'https://www.pixiv.net/users/27915'
            - hash: e7dfac627d1c1cd354c661aa3d2ddcd0
              size: 1000x668 JPEG 455.1KB
              thumbnail: /thumbnail/e/7/d/f/e7dfac627d1c1cd354c661aa3d2ddcd0.jpg
              title: 2020.03.04
              artist: web_giga
              urls:
                source: 'https://twitter.com/web_giga/status/1235138368956018689'
                artist: 'https://twitter.com/intent/user?user_id=274318707'
      title: PostSearchByImageAtAscii2dResponse
      properties:
        url:
          type: string
          minLength: 1
          description: 取得結果ページのURL
        result:
          type: array
          uniqueItems: true
          minItems: 1
          description: 一致した結果一覧
          items:
            type: object
            properties:
              hash:
                type: string
                description: 画像特有のハッシュ値
                example: 379bf76fe1aeff3c4aff68404d717e59
                minLength: 16
                maxLength: 64
              size:
                type: string
                maxLength: 20
                minLength: 0
                description: ファイルサイズ(HumanReadable)
                example: 245.3KB
              resolution:
                type: string
                maxLength: 50
                minLength: 0
                example: 640x480
                description: 解像度
              extension:
                type: string
                minLength: 0
                maxLength: 10
                example: JPEG
                description: ファイル拡張子(大文字)
              thumbnail:
                type: string
                minLength: 0
                description: サムネイル画像URL
                example: 'https://ascii2d.net/thumbnail/3/7/9/b/379bf76fe1aeff3c4aff68404d717e59.jpg'
                format: uri-reference
                maxLength: 200
              title:
                type: string
                description: ツイートタイトルや日付等が入る
                minLength: 0
                maxLength: 100
                example: リプラビチノちゃん
              artist:
                type: string
                minLength: 0
                description: 絵師の名前が入る
                example: ぴちかー
              urls:
                type: object
                description: URL一覧
                properties:
                  source:
                    type: string
                    minLength: 0
                    description: ソースURL
                    format: uri-reference
                    maxLength: 200
                  artist:
                    type: string
                    description: 絵師ページ直リンク(存在する場合)
                    minLength: 0
                    format: uri-reference
                    maxLength: 100
                required:
                  - source
                  - artist
            required:
              - hash
              - size
              - resolution
              - extension
              - thumbnail
              - title
              - artist
      required:
        - url
        - result
    GetFindTagsResponse:
      title: GetFindTagsResponse
      type: object
      x-examples:
        example:
          tags:
            - tagID: 1
              type: character
              name: 香風智乃
              description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
              nsfw: false
              count: 0
              lcount: 0
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagStruct'
    GetTimelineFollowingResponse:
      title: GetTimelineFollowingResponse
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        follows:
          type: array
          items:
            $ref: '#/components/schemas/LightArtistStruct'
      x-examples:
        example:
          pagination:
            title: フォロー一覧
            type: follow
            count: 1
            current: 1
            pages: 1
            perPage: 20
          follows:
            - artistID: 1
              name: 彩電
    WikiArticleStruct:
      title: WikiArticleStruct
      type: object
      x-examples:
        example:
          articleID: 1
          targetType: user
          targetID: 1
          title: お窓とは
          body: One of UsagiBooru developer. Loves kafuu chino.
          date: '2021-03-22'
          revision: 1
          author:
            accountID: 1
            name: お窓
      properties:
        articleID:
          type: integer
          description: 記事ID
          minimum: 1
          example: 1
        targetType:
          type: string
          description: 対象の記事種別
          default: user
          enum:
            - user
            - artist
            - tag
          example: user
          minLength: 1
          maxLength: 10
        targetID:
          type: integer
          description: 対象のユーザー/タグ/絵師ID
          minimum: 1
        title:
          type: string
          description: 記事タイトル
          minLength: 1
          maxLength: 50
          example: お窓とは
        body:
          type: string
          description: 記事本文
          maxLength: 3000
          minLength: 1
          example: One of UsagiBooru developer. Loves kafuu chino.
        date:
          type: string
          description: 作成日時
          format: date
          example: '2021-03-22'
        revision:
          type: integer
          description: 総編集回数
          minimum: 1
          default: 1
          example: 1
        author:
          $ref: '#/components/schemas/LightAccountStruct'
    ActivityPubActorStruct:
      description: 'https://argrath.github.io/activitypub/#actor-objects'
      type: object
      x-examples:
        example-1:
          '@context':
            - 'https://www.w3.org/ns/activitystreams'
            - '@language': ja
          type: Person
          id: 'https://kenzoishii.example.com/'
          following: 'https://kenzoishii.example.com/following.json'
          followers: 'https://kenzoishii.example.com/followers.json'
          liked: 'https://kenzoishii.example.com/liked.json'
          inbox: 'https://kenzoishii.example.com/inbox.json'
          outbox: 'https://kenzoishii.example.com/feed.json'
          preferredUsername: kenzoishii
          name: 石井健蔵
          summary: この方はただの例です
          icon:
            - 'https://kenzoishii.example.com/image/165987aklre4'
      title: ActivityPubActorStruct
      properties:
        '@context':
          type: array
          items:
            type: object
            properties:
              '1':
                type: object
                properties:
                  '@language':
                    type: string
                    minLength: 1
                required:
                  - '@language'
        type:
          type: string
          minLength: 1
        id:
          type: string
          minLength: 1
        following:
          type: string
          minLength: 1
        followers:
          type: string
          minLength: 1
        liked:
          type: string
          minLength: 1
        inbox:
          type: string
          minLength: 1
        outbox:
          type: string
          minLength: 1
        preferredUsername:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        summary:
          type: string
          minLength: 1
        icon:
          type: array
          items:
            type: string
      required:
        - type
        - id
        - inbox
        - outbox
        - preferredUsername
        - name
        - summary
        - icon
    GetActivityPubGeneralResponse:
      description: ''
      type: object
      properties:
        '@context':
          type: string
          minLength: 1
        summary:
          type: string
          minLength: 1
        type:
          type: string
          minLength: 1
        totalItems:
          type: number
        orderedItems:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - type
              - name
            properties:
              type:
                type: string
                minLength: 1
              name:
                type: string
                minLength: 1
      required:
        - '@context'
        - summary
        - type
        - totalItems
        - orderedItems
      x-examples:
        example:
          '@context': 'https://www.w3.org/ns/activitystreams'
          summary: Sally's notes
          type: OrderedCollection
          totalItems: 2
          orderedItems:
            - type: Note
              name: A Simple Note
            - type: Note
              name: Another Simple Note
      title: GetActivityPubGeneralResponse
    PostActivityPubGeneralRequest:
      description: ''
      type: object
      properties:
        '@context':
          type: string
          minLength: 1
        type:
          type: string
          minLength: 1
        summary:
          type: string
          minLength: 1
        actor:
          type: object
          properties:
            type:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
          required:
            - type
            - name
        object:
          type: object
          properties:
            type:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
          required:
            - type
            - name
      required:
        - '@context'
        - type
        - summary
        - actor
        - object
      x-examples:
        example-1:
          '@context': 'https://www.w3.org/ns/activitystreams'
          type: Activity
          summary: Sally did something to a note
          actor:
            type: Person
            name: Sally
          object:
            type: Note
            name: A Note
      title: PostActivityPubGeneralRequest
    GeneralMessageResponse:
      title: GeneralMessageResponse
      type: object
      properties:
        message:
          type: string
          description: 応答メッセージ(何が間違っているかの詳細)
          minLength: 1
      required:
        - message
      x-examples:
        not-found:
          message: Specified content was not found.
        no-permission:
          message: You don't have enough permission to do it.
        bad-request:
          message: Your request body is wrong.
        locked:
          message: Specified content is referenced from other content.
    CommentEditStruct:
      title: CommentEditStruct
      type: object
      x-examples:
        example:
          body: Hello world!
      properties:
        body:
          type: string
          description: メッセージ本文(これ以外は編集できない)
      required:
        - body
    InviteStruct:
      title: InviteStruct
      type: object
      properties:
        inviteID:
          type: integer
          example: 1
          minimum: 1
        code:
          type: string
          example: USAGIDEV
          minLength: 8
          maxLength: 16
        issuer:
          $ref: '#/components/schemas/LightAccountStruct'
        count:
          type: integer
          minimum: 1
          default: 1
          example: 1
          format: int32
      x-examples:
        example:
          inviteID: 1
          code: USAGIDEV
          issuer:
            accountID: 1
            name: お窓
          count: 1
    PaginationStruct:
      title: PaginationStruct
      type: object
      x-examples:
        example:
          title: 香風智乃
          type: tag
          count: 1
          current: 1
          pages: 1
          perPage: 20
      properties:
        title:
          type: string
          minLength: 1
          description: ページネーションタイトル(表示用)
          example: 香風智乃
        type:
          type: string
          description: ページネーション種別(表示用)
          example: tag
          enum:
            - artist
            - tag
            - uploader
            - notify-client
            - notify-condition
            - mute
            - follow
            - article
            - mylist-list
            - art
            - upload-history
          default: tag
        count:
          type: integer
          example: 1
          description: ヒット総数
          minimum: 0
          default: 0
        current:
          type: integer
          description: 現在のページ
          minimum: 1
          example: 1
          default: 1
        pages:
          type: integer
          description: ページ数
          minimum: 1
          example: 1
          default: 1
        perPage:
          type: integer
          description: ページ毎の取得数
          default: 20
          example: 20
          minimum: 20
          enum:
            - 20
            - 40
            - 60
            - 80
            - 100
          maximum: 100
          format: int32
      required:
        - title
        - type
        - count
        - current
        - pages
        - perPage
    MuteStruct:
      title: MuteStruct
      type: object
      x-examples:
        example:
          muteID: 1
          targetID: 1
          targetType: tag
      properties:
        muteID:
          type: integer
          description: ミュートID
          minimum: 1
          example: 1
        targetType:
          type: string
          description: ミュート種別
          enum:
            - tag
            - artist
          example: tag
        targetID:
          type: integer
          description: 対象のタグ/絵師ID
          minimum: 1
          example: 1
    PostMachineLearningGeneralRequest:
      title: PostMachineLearningGeneralRequest
      type: object
      x-examples: {}
      properties:
        image:
          type: string
          format: binary
          description: Binary型の画像
      required:
        - image
    PostPredictNsfwResponse:
      title: PostPredictNsfwResponse
      type: object
      properties:
        nsfw:
          type: boolean
          default: false
        accuracy:
          type: number
          minimum: 0
          maximum: 1
          example: 0.8889
      required:
        - nsfw
        - accuracy
      x-examples:
        example:
          nsfw: false
          accuracy: 0.8889
    PostPredictTagsResponse:
      title: PostPredictTagsResponse
      type: object
      properties:
        tags:
          type: array
          minItems: 0
          maxItems: 100
          items:
            type: object
            properties:
              name:
                type: string
                description: タグ名
                minLength: 1
                maxLength: 100
                example: kafuu_chino
              accuracy:
                type: number
                minimum: 0
                maximum: 1
                example: 0.8889
                description: 推定の確実度
            required:
              - name
              - accuracy
      required:
        - tags
      x-examples:
        example-1:
          tags:
            - name: kafuu_chino
              accuracy: 0.8889
    PostMachineLearningGeneralResponse:
      title: PostMachineLearningGeneralResponse
      type: object
      properties:
        url:
          type: string
          description: Polling用URLを返す(すぐに終わらん)
          format: iri-reference
      required:
        - url
      x-examples:
        example:
          url: 'https://api.example.com/ml/polling/1'
    GetMachineLearningGeneralResponse:
      title: GetMachineLearningGeneralResponse
      type: object
      properties:
        url:
          type: string
          format: uri-reference
          minLength: 1
          maxLength: 100
          example: 'https://api.example.com/ml/result/12345.png'
      required:
        - url
      x-examples:
        example:
          url: 'https://api.example.com/ml/result/12345.png'
    GetPollingFinishResponse:
      title: GetPollingFinishResponse
      type: object
      properties:
        url:
          type: string
          format: uri-reference
          minLength: 1
          maxLength: 100
          example: 'https://api.example.com/ml/predict/tags/result/1'
        id:
          type: string
          minLength: 1
          maxLength: 100
          example: '1'
      required:
        - url
        - id
      x-examples:
        example:
          url: 'https://api.example.com/ml/predict/tags/result/1'
          id: '1'
    GetWikiArticlesResponse:
      title: GetWikiArticlesResponse
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
        articles:
          type: array
          items:
            $ref: '#/components/schemas/WikiArticleStruct'
      x-examples:
        example:
          pagination:
            title: Wiki記事一覧
            type: article
            count: 1
            current: 1
            pages: 1
            perPage: 20
          articles:
            - articleID: 1
              targetType: user
              targetID: 1
              title: お窓とは
              body: One of UsagiBooru developer. Loves kafuu chino.
              date: '2021-03-22'
              revision: 1
              author:
                accountID: 1
                name: お窓
    GetWebAuthnRequestResponse:
      description: ''
      type: object
      x-examples:
        example-1:
          rp:
            name: string
            id: string
          user:
            displayName: string
            id: string
            name: string
          challenge: string
          pubKeyCredParams:
            - type: string
              alg: 0
          timeout: 0
          attestation: string
          excludeCredentials:
            - id: string
              type: string
              transports:
                - {}
          authenticatorSelection:
            authenticatorAttachment: string
            userVerification: string
      properties:
        rp:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            id:
              type: string
              minLength: 1
        user:
          type: object
          properties:
            displayName:
              type: string
              minLength: 1
            id:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
        challenge:
          type: string
          minLength: 1
        pubKeyCredParams:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              type:
                type: string
                minLength: 1
              alg:
                type: number
        timeout:
          type: number
        attestation:
          type: string
          minLength: 1
        excludeCredentials:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              id:
                type: string
                minLength: 1
              type:
                type: string
                minLength: 1
              transports:
                type: array
                items:
                  type: object
        authenticatorSelection:
          type: object
          properties:
            authenticatorAttachment:
              type: string
              minLength: 1
            userVerification:
              type: string
              minLength: 1
      title: ''
    LightAccountStruct:
      title: LightAccountStruct
      type: object
      x-examples:
        example:
          accountID: 1
          name: お窓
      properties:
        accountID:
          type: integer
          description: アカウントID
          example: 1
          minimum: 1
        name:
          type: string
          description: アカウント名
          example: お窓
    LightArtistStruct:
      title: LightArtistStruct
      type: object
      properties:
        artistID:
          type: integer
          example: 1
        name:
          type: string
          example: 彩電
      x-examples:
        example:
          artistID: 1
          name: 彩電
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
  parameters:
    SearchQuerySort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - l
          - d
        example: d
        default: d
      description: 'ソート方法 l:いいね数順 d:投稿日順'
    SearchQueryOrder:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - d
          - a
        default: d
        example: d
        minLength: 1
        maxLength: 1
      description: 'ソート方向 d:降順(大→小) a:昇順(小→大)'
    SearchQueryPage:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
    SearchQueryMylistAllow:
      name: with_mylisted
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        enum:
          - 1
          - 0
        example: 1
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
    SearchQueryMylistDeny:
      name: with_mylisted
      in: query
      schema:
        type: integer
        enum:
          - 0
          - 1
        example: 0
        default: 0
        minimum: 0
        maximum: 1
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
    SearchQueryPerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        default: 20
        enum:
          - 20
          - 40
          - 60
          - 80
          - 100
        example: 20
        minimum: 20
        maximum: 100
      description: 1ページ辺りの要素数
    SearchQuerySortCatalog:
      in: query
      schema:
        type: string
        default: d
        enum:
          - c
          - d
          - l
          - 'n'
        example: d
      description: 'ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前'
      name: sort
  examples: {}
  responses: {}
security:
  - Authorization: []
tags:
  - name: accounts
  - name: activitypub
  - name: artists
  - name: arts
  - name: catalog
  - name: characters
  - name: garbage_collect
  - name: invites
  - name: ml
  - name: mutes
  - name: mylist
  - name: navigations
  - name: news
  - name: notify
  - name: ranking
  - name: report
  - name: scrape
  - name: search
  - name: tags
  - name: timeline
  - name: token
  - name: upload
  - name: wiki
